/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import '@ethersproject/shims'
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type {
  DelegatableFacet,
  DelegatableFacetInterface,
} from '../DelegatableFacet'

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'to',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'gasLimit',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct Transaction',
            name: 'transaction',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'delegate',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'authority',
                    type: 'bytes32',
                  },
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'enforcer',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes',
                        name: 'terms',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Caveat[]',
                    name: 'caveats',
                    type: 'tuple[]',
                  },
                  {
                    internalType: 'uint256',
                    name: 'salt',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Delegation',
                name: 'message',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'signer',
                type: 'address',
              },
            ],
            internalType: 'struct SignedDelegation[]',
            name: 'authority',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Invocation[]',
        name: 'batch',
        type: 'tuple[]',
      },
    ],
    name: 'contractInvoke',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_input',
        type: 'address[]',
      },
    ],
    name: 'getAddressArrayPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'to',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'gasLimit',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'value',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bytes',
                    name: 'data',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Transaction',
                name: 'transaction',
                type: 'tuple',
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'delegate',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes32',
                        name: 'authority',
                        type: 'bytes32',
                      },
                      {
                        components: [
                          {
                            internalType: 'address',
                            name: 'enforcer',
                            type: 'address',
                          },
                          {
                            internalType: 'bytes',
                            name: 'terms',
                            type: 'bytes',
                          },
                        ],
                        internalType: 'struct Caveat[]',
                        name: 'caveats',
                        type: 'tuple[]',
                      },
                      {
                        internalType: 'uint256',
                        name: 'salt',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct Delegation',
                    name: 'message',
                    type: 'tuple',
                  },
                  {
                    internalType: 'bytes',
                    name: 'signature',
                    type: 'bytes',
                  },
                  {
                    internalType: 'address',
                    name: 'signer',
                    type: 'address',
                  },
                ],
                internalType: 'struct SignedDelegation[]',
                name: 'authority',
                type: 'tuple[]',
              },
            ],
            internalType: 'struct Invocation[]',
            name: 'invocations',
            type: 'tuple[]',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'nonce',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'queue',
                type: 'uint256',
              },
            ],
            internalType: 'struct ReplayProtection',
            name: 'replayProtection',
            type: 'tuple',
          },
        ],
        internalType: 'struct Batch',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getBatchPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'enforcer',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'terms',
            type: 'bytes',
          },
        ],
        internalType: 'struct Caveat[]',
        name: '_input',
        type: 'tuple[]',
      },
    ],
    name: 'getCaveatArrayPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'enforcer',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'terms',
            type: 'bytes',
          },
        ],
        internalType: 'struct Caveat',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getCaveatPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'delegate',
            type: 'address',
          },
          {
            internalType: 'bytes32',
            name: 'authority',
            type: 'bytes32',
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'enforcer',
                type: 'address',
              },
              {
                internalType: 'bytes',
                name: 'terms',
                type: 'bytes',
              },
            ],
            internalType: 'struct Caveat[]',
            name: 'caveats',
            type: 'tuple[]',
          },
          {
            internalType: 'uint256',
            name: 'salt',
            type: 'uint256',
          },
        ],
        internalType: 'struct Delegation',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getDelegationPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getDomainHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'contractName',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'version',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'verifyingContract',
        type: 'address',
      },
    ],
    name: 'getEIP712DomainHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'name',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'version',
            type: 'string',
          },
          {
            internalType: 'uint256',
            name: 'chainId',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'verifyingContract',
            type: 'address',
          },
        ],
        internalType: 'struct EIP712Domain',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getEip712DomainPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'to',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'gasLimit',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct Transaction',
            name: 'transaction',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'delegate',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'authority',
                    type: 'bytes32',
                  },
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'enforcer',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes',
                        name: 'terms',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Caveat[]',
                    name: 'caveats',
                    type: 'tuple[]',
                  },
                  {
                    internalType: 'uint256',
                    name: 'salt',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Delegation',
                name: 'message',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'signer',
                type: 'address',
              },
            ],
            internalType: 'struct SignedDelegation[]',
            name: 'authority',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Invocation[]',
        name: '_input',
        type: 'tuple[]',
      },
    ],
    name: 'getInvocationArrayPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'to',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'gasLimit',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct Transaction',
            name: 'transaction',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'delegate',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'authority',
                    type: 'bytes32',
                  },
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'enforcer',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes',
                        name: 'terms',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Caveat[]',
                    name: 'caveats',
                    type: 'tuple[]',
                  },
                  {
                    internalType: 'uint256',
                    name: 'salt',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Delegation',
                name: 'message',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'signer',
                type: 'address',
              },
            ],
            internalType: 'struct SignedDelegation[]',
            name: 'authority',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Invocation',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getInvocationPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'signers',
            type: 'address[]',
          },
          {
            internalType: 'uint256',
            name: 'threshold',
            type: 'uint256',
          },
        ],
        internalType: 'struct MultisigParams',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getMultisigparamsPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'intendedSender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'queue',
        type: 'uint256',
      },
    ],
    name: 'getNonce',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'queue',
            type: 'uint256',
          },
        ],
        internalType: 'struct ReplayProtection',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getReplayprotectionPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'to',
                        type: 'address',
                      },
                      {
                        internalType: 'uint256',
                        name: 'gasLimit',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'value',
                        type: 'uint256',
                      },
                      {
                        internalType: 'bytes',
                        name: 'data',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Transaction',
                    name: 'transaction',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: 'address',
                            name: 'delegate',
                            type: 'address',
                          },
                          {
                            internalType: 'bytes32',
                            name: 'authority',
                            type: 'bytes32',
                          },
                          {
                            components: [
                              {
                                internalType: 'address',
                                name: 'enforcer',
                                type: 'address',
                              },
                              {
                                internalType: 'bytes',
                                name: 'terms',
                                type: 'bytes',
                              },
                            ],
                            internalType: 'struct Caveat[]',
                            name: 'caveats',
                            type: 'tuple[]',
                          },
                          {
                            internalType: 'uint256',
                            name: 'salt',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct Delegation',
                        name: 'message',
                        type: 'tuple',
                      },
                      {
                        internalType: 'bytes',
                        name: 'signature',
                        type: 'bytes',
                      },
                      {
                        internalType: 'address',
                        name: 'signer',
                        type: 'address',
                      },
                    ],
                    internalType: 'struct SignedDelegation[]',
                    name: 'authority',
                    type: 'tuple[]',
                  },
                ],
                internalType: 'struct Invocation[]',
                name: 'invocations',
                type: 'tuple[]',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'nonce',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'queue',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ReplayProtection',
                name: 'replayProtection',
                type: 'tuple',
              },
            ],
            internalType: 'struct Batch',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedBatch',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getSignedbatchPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'delegate',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'authority',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'enforcer',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes',
                    name: 'terms',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Caveat[]',
                name: 'caveats',
                type: 'tuple[]',
              },
              {
                internalType: 'uint256',
                name: 'salt',
                type: 'uint256',
              },
            ],
            internalType: 'struct Delegation',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedDelegation[]',
        name: '_input',
        type: 'tuple[]',
      },
    ],
    name: 'getSigneddelegationArrayPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'delegate',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'authority',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'enforcer',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes',
                    name: 'terms',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Caveat[]',
                name: 'caveats',
                type: 'tuple[]',
              },
              {
                internalType: 'uint256',
                name: 'salt',
                type: 'uint256',
              },
            ],
            internalType: 'struct Delegation',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedDelegation',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getSigneddelegationPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address[]',
                name: 'signers',
                type: 'address[]',
              },
              {
                internalType: 'uint256',
                name: 'threshold',
                type: 'uint256',
              },
            ],
            internalType: 'struct MultisigParams',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedMultisigParams',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getSignedmultisigparamsPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'gasLimit',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct Transaction',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getTransactionPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'to',
                        type: 'address',
                      },
                      {
                        internalType: 'uint256',
                        name: 'gasLimit',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'value',
                        type: 'uint256',
                      },
                      {
                        internalType: 'bytes',
                        name: 'data',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Transaction',
                    name: 'transaction',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: 'address',
                            name: 'delegate',
                            type: 'address',
                          },
                          {
                            internalType: 'bytes32',
                            name: 'authority',
                            type: 'bytes32',
                          },
                          {
                            components: [
                              {
                                internalType: 'address',
                                name: 'enforcer',
                                type: 'address',
                              },
                              {
                                internalType: 'bytes',
                                name: 'terms',
                                type: 'bytes',
                              },
                            ],
                            internalType: 'struct Caveat[]',
                            name: 'caveats',
                            type: 'tuple[]',
                          },
                          {
                            internalType: 'uint256',
                            name: 'salt',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct Delegation',
                        name: 'message',
                        type: 'tuple',
                      },
                      {
                        internalType: 'bytes',
                        name: 'signature',
                        type: 'bytes',
                      },
                      {
                        internalType: 'address',
                        name: 'signer',
                        type: 'address',
                      },
                    ],
                    internalType: 'struct SignedDelegation[]',
                    name: 'authority',
                    type: 'tuple[]',
                  },
                ],
                internalType: 'struct Invocation[]',
                name: 'invocations',
                type: 'tuple[]',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'nonce',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'queue',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ReplayProtection',
                name: 'replayProtection',
                type: 'tuple',
              },
            ],
            internalType: 'struct Batch',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedBatch',
        name: 'signedBatch',
        type: 'tuple',
      },
    ],
    name: 'invoke',
    outputs: [
      {
        internalType: 'bool',
        name: 'success',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'contractName',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'version',
        type: 'string',
      },
    ],
    name: 'setDomainHash',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'to',
                        type: 'address',
                      },
                      {
                        internalType: 'uint256',
                        name: 'gasLimit',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'value',
                        type: 'uint256',
                      },
                      {
                        internalType: 'bytes',
                        name: 'data',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Transaction',
                    name: 'transaction',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: 'address',
                            name: 'delegate',
                            type: 'address',
                          },
                          {
                            internalType: 'bytes32',
                            name: 'authority',
                            type: 'bytes32',
                          },
                          {
                            components: [
                              {
                                internalType: 'address',
                                name: 'enforcer',
                                type: 'address',
                              },
                              {
                                internalType: 'bytes',
                                name: 'terms',
                                type: 'bytes',
                              },
                            ],
                            internalType: 'struct Caveat[]',
                            name: 'caveats',
                            type: 'tuple[]',
                          },
                          {
                            internalType: 'uint256',
                            name: 'salt',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct Delegation',
                        name: 'message',
                        type: 'tuple',
                      },
                      {
                        internalType: 'bytes',
                        name: 'signature',
                        type: 'bytes',
                      },
                      {
                        internalType: 'address',
                        name: 'signer',
                        type: 'address',
                      },
                    ],
                    internalType: 'struct SignedDelegation[]',
                    name: 'authority',
                    type: 'tuple[]',
                  },
                ],
                internalType: 'struct Invocation[]',
                name: 'invocations',
                type: 'tuple[]',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'nonce',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'queue',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ReplayProtection',
                name: 'replayProtection',
                type: 'tuple',
              },
            ],
            internalType: 'struct Batch',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedBatch',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'verifySignedBatch',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'delegate',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'authority',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'enforcer',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes',
                    name: 'terms',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Caveat[]',
                name: 'caveats',
                type: 'tuple[]',
              },
              {
                internalType: 'uint256',
                name: 'salt',
                type: 'uint256',
              },
            ],
            internalType: 'struct Delegation',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedDelegation',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'verifySignedDelegation',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address[]',
                name: 'signers',
                type: 'address[]',
              },
              {
                internalType: 'uint256',
                name: 'threshold',
                type: 'uint256',
              },
            ],
            internalType: 'struct MultisigParams',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedMultisigParams',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'verifySignedMultisigParams',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b5061284c806100206000396000f3fe608060405234801561001057600080fd5b50600436106101285760003560e01c8063037dd6ff1461012d57806307cae44d146101565780630deeb6001461016957806314239de71461017c5780632b163c2b1461019c5780633c9f21a0146101af57806359b989ca146101c25780636eb8aaf4146101d557806383ebb771146101e857806389535803146101f057806393574eed1461020357806399794ee0146102165780639dfae3121461022b578063a262ec5b1461023e578063a2c6cb021461025e578063bbd7581714610271578063bdcc117914610284578063d327c1eb14610297578063da334261146102aa578063dbefc91f146102bd578063dbf12200146102d0578063e315644d146102e3578063f4fbfd2f146102f6578063fb293bd514610309575b600080fd5b61014061013b36600461150e565b61031c565b60405161014d9190611550565b60405180910390f35b610140610164366004611670565b610393565b6101406101773660046116aa565b610403565b61018f61018a366004611930565b610449565b60405161014d9190611973565b6101406101aa366004611981565b610586565b6101406101bd366004611a54565b6105d6565b6101406101d0366004611a8e565b61061e565b61018f6101e3366004611ac8565b610672565b600154610140565b6101406101fe366004611b02565b610682565b610140610211366004611ac8565b6106ab565b610229610224366004611b89565b6106dc565b005b610140610239366004611bfd565b610728565b61025161024c366004611c68565b610768565b60405161014d9190611cb7565b61014061026c366004611cc5565b61077c565b61014061027f366004611cff565b6107ac565b610140610292366004611d39565b6107ff565b6101406102a5366004611d73565b61083d565b6102516102b8366004611e25565b610899565b61018f6102cb366004611670565b6108e5565b6101406102de366004611e5f565b6108f5565b6101406102f1366004611e99565b61093c565b610140610304366004611930565b6109a4565b610140610317366004611ed3565b6109d5565b6000606060005b8351811015610384578161034f85838151811061034257610342611f0d565b60200260200101516106ab565b604051602001610360929190611f77565b6040516020818303038152906040529150808061037c90611faf565b915050610323565b50805160209091012092915050565b6000807ff562bb2887ad46fa4ed8270ec3eb4c4ddaaa8eac6df6a306f0539ed308b63f336103c48460000151610403565b60208086015180519082012060408088015190516103e495949301611fc9565b60408051601f1981840301815291905280516020909101209392505050565b6000807ffdaf74c87f80f0094315fc4e85684a5c59e57ac35e3b5b0dfa85df43b3439b57610434846000015161077c565b6020808601516040516103e494939201611ffe565b60008061045983600001516107ff565b9050600061046660015490565b82604051602001610478929190612026565b60405160208183030381529060405280519060200120905083604001516001600160a01b031660006001600160a01b0316036104c75760006104be828660200151610a3d565b95945050505050565b600084604001516001600160a01b0316631626ba7e8387602001516040518363ffffffff1660e01b81526004016104ff929190612081565b602060405180830381865afa15801561051c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054091906120bc565b9050630b135d3f60e11b6001600160e01b031982161461057b5760405162461bcd60e51b815260040161057290612108565b60405180910390fd5b505050506040015190565b6000807f16ce3e7a160ccd1337156522b7b75f86515dce2f84625303c8cb53733473e20e6105b784600001516107ac565b6105c4856020015161031c565b6040516020016103e493929190611ffe565b6000806000805160206127f7833981519152836000015180519060200120846020015180519060200120856040015186606001516040516020016103e4959493929190612118565b6000807fc868c829d0d249972f3cbb7c51600c4e74dd6ed52ba5192cddc7526c48257a9f8360000151846020015161065986604001516109d5565b86606001516040516020016103e4959493929190612164565b600080610459836000015161061e565b6001600160a01b0382166000908152602081815260408083208484529091529020545b92915050565b6000807fd1ffa191aacebaec8a0767b176d64c69a029e83c7bae7f3fdde5f0c5fdaf35036103c4846000015161061e565b61072083838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525085925046915030905061083d565b600155505050565b6000807fe8d3d963b33868fb116316bc3fd55e8f49123f30e4418f71e140d54b7cd3b2b9836000015184602001516040516020016103e493929190611ffe565b6000610775838333610b06565b9392505050565b60008160405160200161078f91906121fc565b604051602081830303815290604052805190602001209050919050565b6000807f8e96309e8d7caab0cd12f924b5671b439d8ee99659ea36357e8cc30e7fe322938360000151846020015185604001518660600151805190602001206040516020016103e4959493929190612164565b6000807f6d01ae502c3d43977868cf20f1077c1dc1970131f37d80ed21ecf591e958d810610830846000015161093c565b6105c48560200151610728565b6000806000805160206127f7833981519152868051906020012086805190602001208686604051602001610875959493929190612118565b60408051601f1981840301815291905280516020909101209150505b949350505050565b6000806108a861018a84612208565b9050366108b58480612214565b90506108d2826108cd36849003840160208501611bfd565b610ca6565b6108916108df8280612238565b84610b06565b6000806104598360000151610403565b6000807f80ad7e1b04ee6d994a125f4714ca0720908bd80ed16063ec8aee4b88e9253e2d83600001518460200151805190602001206040516020016103e493929190612294565b6000606060005b8351811015610384578161096f85838151811061096257610962611f0d565b6020026020010151610586565b604051602001610980929190611f77565b6040516020818303038152906040529150808061099c90611faf565b915050610943565b6000807f220f51b2634e2a90b6fb21f89acf38590ea901923e6240ec90bcd0db8314524c6103c484600001516107ff565b6000606060005b83518110156103845781610a088583815181106109fb576109fb611f0d565b60200260200101516108f5565b604051602001610a19929190611f77565b60405160208183030381529060405291508080610a3590611faf565b9150506109dc565b6000806000808451604114610a5857600093505050506106a5565b50505060208201516040830151606084015160001a601b811015610a8457610a81601b826122af565b90505b8060ff16601b14158015610a9c57508060ff16601c14155b15610aad57600093505050506106a5565b60018682858560405160008152602001604052604051610ad094939291906122de565b6020604051602081039080840390855afa158015610af2573d6000803e3d6000fd5b5050506020604051035193505050506106a5565b6000805b83811015610c9e5736858583818110610b2557610b25611f0d565b9050602002810190610b379190612313565b604080516060810190915290915060009080610b53848061232d565b610b61906020810190612347565b6001600160a01b03168152602001610b79848061232d565b604001358152602001610b8c848061232d565b610b9a906060810190612368565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093909452509293508792509050610be46020850185612238565b90501115610c0f57610c0b610bfc6020850185612238565b610c05916123be565b83610d24565b5090505b6000610c1b848061232d565b610c24906123cb565b80519091506001600160a01b03163014610c505760405162461bcd60e51b815260040161057290612420565b610c6881600001518260600151836020015185610e5e565b955085610c875760405162461bcd60e51b81526004016105729061246e565b505050508080610c9690611faf565b915050610b0a565b509392505050565b60208082015182516001600160a01b038516600090815280845260408082208483529094529290922054909190610cde90600161247e565b8114610cfc5760405162461bcd60e51b8152600401610572906124d1565b6001600160a01b03909316600090815260208181526040808320938352929052209190915550565b60008080805b8551811015610e54576000868281518110610d4757610d47611f0d565b602002602001015190506000610d5c82610672565b9050610d946040518060400160405280601481526020017364656c65676174696f6e5369676e65723a20257360601b81525082610f3e565b81516000849003610dc857602081015115610dc15760405162461bcd60e51b815260040161057290612520565b8196508195505b856001600160a01b0316826001600160a01b031614610df95760405162461bcd60e51b815260040161057290612572565b84816020015114610e1c5760405162461bcd60e51b8152600401610572906125cc565b6000610e27846106ab565b9050610e3882604001518a83610f87565b905195509350829150610e4c905081611faf565b915050610d2a565b50505b9250929050565b6000808483604051602001610e74929190612604565b60405160208183030381529060405290506060866001600160a01b03168583604051610ea09190612626565b60006040518083038160008787f1925050503d8060008114610ede576040519150601f19603f3d011682016040523d82523d6000602084013e610ee3565b606091505b50909350905082610f3457805115610f1c576000610f008261108d565b90508060405162461bcd60e51b81526004016105729190612632565b60405162461bcd60e51b81526004016105729061246e565b5050949350505050565b610f838282604051602401610f54929190612643565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526110dc565b5050565b60005b83518161ffff161015611087576000848261ffff1681518110610faf57610faf611f0d565b60200260200101516000015190506000816001600160a01b0316635068de4c878561ffff1681518110610fe457610fe4611f0d565b60200260200101516020015187876040518463ffffffff1660e01b8152600401611010939291906126a2565b6020604051808303816000875af115801561102f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105391906126e9565b9050806110725760405162461bcd60e51b81526004016105729061273c565b5050808061107f9061274c565b915050610f8a565b50505050565b805160609060448110156110b1575050604080516020810190915260008152919050565b6004830180516003198301825290936110d390838101602001906024016127bc565b93525090919050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b601f01601f191690565b634e487b7160e01b600052604160045260246000fd5b611126826110fd565b81018181106001600160401b038211171561114357611143611107565b6040525050565b600061115560405190565b9050611161828261111d565b919050565b60006001600160401b0382111561117f5761117f611107565b5060209081020190565b60006001600160a01b0382166106a5565b6111a381611189565b81146111ae57600080fd5b50565b80356106a58161119a565b806111a3565b80356106a5816111bc565b60006001600160401b038211156111e6576111e6611107565b6111ef826110fd565b60200192915050565b82818337506000910152565b6000611217611212846111cd565b61114a565b90508281526020810184848401111561123257611232600080fd5b610c9e8482856111f8565b600082601f83011261125157611251600080fd5b8135610891848260208601611204565b60006040828403121561127657611276600080fd5b611280604061114a565b9050600061128e84846111b1565b82525060208201356001600160401b038111156112ad576112ad600080fd5b6112b98482850161123d565b60208301525092915050565b60006112d361121284611166565b838152905060208082019084028301858111156112f2576112f2600080fd5b835b818110156113325780356001600160401b0381111561131557611315600080fd5b8086016113228982611261565b85525050602092830192016112f4565b5050509392505050565b600082601f83011261135057611350600080fd5b81356108918482602086016112c5565b60006080828403121561137557611375600080fd5b61137f608061114a565b9050600061138d84846111b1565b825250602061139e848483016111c2565b60208301525060408201356001600160401b038111156113c0576113c0600080fd5b6113cc8482850161133c565b60408301525060606113e0848285016111c2565b60608301525092915050565b60006060828403121561140157611401600080fd5b61140b606061114a565b905081356001600160401b0381111561142657611426600080fd5b61143284828501611360565b82525060208201356001600160401b0381111561145157611451600080fd5b61145d8482850161123d565b6020830152506040611471848285016111b1565b60408301525092915050565b600061148b61121284611166565b838152905060208082019084028301858111156114aa576114aa600080fd5b835b818110156113325780356001600160401b038111156114cd576114cd600080fd5b8086016114da89826113ec565b85525050602092830192016114ac565b600082601f8301126114fe576114fe600080fd5b813561089184826020860161147d565b60006020828403121561152357611523600080fd5b81356001600160401b0381111561153c5761153c600080fd5b610891848285016114ea565b805b82525050565b602081016106a58284611548565b600061156c61121284611166565b8381529050602080820190840283018581111561158b5761158b600080fd5b835b8181101561133257806115a088826111b1565b8452506020928301920161158d565b600082601f8301126115c3576115c3600080fd5b813561089184826020860161155e565b6000604082840312156115e8576115e8600080fd5b6115f2604061114a565b905081356001600160401b0381111561160d5761160d600080fd5b611619848285016115af565b82525060206112b9848483016111c2565b60006060828403121561163f5761163f600080fd5b611649606061114a565b905081356001600160401b0381111561166457611664600080fd5b611432848285016115d3565b60006020828403121561168557611685600080fd5b81356001600160401b0381111561169e5761169e600080fd5b6108918482850161162a565b6000602082840312156116bf576116bf600080fd5b81356001600160401b038111156116d8576116d8600080fd5b610891848285016115d3565b6000608082840312156116f9576116f9600080fd5b611703608061114a565b9050600061171184846111b1565b8252506020611722848483016111c2565b6020830152506040611736848285016111c2565b60408301525060608201356001600160401b0381111561175857611758600080fd5b6113e08482850161123d565b60006040828403121561177957611779600080fd5b611783604061114a565b905081356001600160401b0381111561179e5761179e600080fd5b6117aa848285016116e4565b82525060208201356001600160401b038111156117c9576117c9600080fd5b6112b9848285016114ea565b60006117e361121284611166565b8381529050602080820190840283018581111561180257611802600080fd5b835b818110156113325780356001600160401b0381111561182557611825600080fd5b8086016118328982611764565b8552505060209283019201611804565b600082601f83011261185657611856600080fd5b81356108918482602086016117d5565b60006040828403121561187b5761187b600080fd5b611885604061114a565b9050600061161984846111c2565b6000606082840312156118a8576118a8600080fd5b6118b2604061114a565b905081356001600160401b038111156118cd576118cd600080fd5b6118d984828501611842565b82525060206112b984848301611866565b6000606082840312156118ff576118ff600080fd5b611909606061114a565b905081356001600160401b0381111561192457611924600080fd5b61143284828501611893565b60006020828403121561194557611945600080fd5b81356001600160401b0381111561195e5761195e600080fd5b610891848285016118ea565b61154a81611189565b602081016106a5828461196a565b60006020828403121561199657611996600080fd5b81356001600160401b038111156119af576119af600080fd5b61089184828501611764565b6000608082840312156119d0576119d0600080fd5b6119da608061114a565b905081356001600160401b038111156119f5576119f5600080fd5b611a018482850161123d565b82525060208201356001600160401b03811115611a2057611a20600080fd5b611a2c8482850161123d565b6020830152506040611a40848285016111c2565b60408301525060606113e0848285016111b1565b600060208284031215611a6957611a69600080fd5b81356001600160401b03811115611a8257611a82600080fd5b610891848285016119bb565b600060208284031215611aa357611aa3600080fd5b81356001600160401b03811115611abc57611abc600080fd5b61089184828501611360565b600060208284031215611add57611add600080fd5b81356001600160401b03811115611af657611af6600080fd5b610891848285016113ec565b60008060408385031215611b1857611b18600080fd5b6000611b2485856111b1565b9250506020611b35858286016111c2565b9150509250929050565b60008083601f840112611b5457611b54600080fd5b5081356001600160401b03811115611b6e57611b6e600080fd5b602083019150836001820283011115610e5757610e57600080fd5b600080600060408486031215611ba157611ba1600080fd5b83356001600160401b03811115611bba57611bba600080fd5b611bc686828701611b3f565b935093505060208401356001600160401b03811115611be757611be7600080fd5b611bf38682870161123d565b9150509250925092565b600060408284031215611c1257611c12600080fd5b60006108918484611866565b60008083601f840112611c3357611c33600080fd5b5081356001600160401b03811115611c4d57611c4d600080fd5b602083019150836020820283011115610e5757610e57600080fd5b60008060208385031215611c7e57611c7e600080fd5b82356001600160401b03811115611c9757611c97600080fd5b611ca385828601611c1e565b92509250509250929050565b80151561154a565b602081016106a58284611caf565b600060208284031215611cda57611cda600080fd5b81356001600160401b03811115611cf357611cf3600080fd5b610891848285016115af565b600060208284031215611d1457611d14600080fd5b81356001600160401b03811115611d2d57611d2d600080fd5b610891848285016116e4565b600060208284031215611d4e57611d4e600080fd5b81356001600160401b03811115611d6757611d67600080fd5b61089184828501611893565b60008060008060808587031215611d8c57611d8c600080fd5b84356001600160401b03811115611da557611da5600080fd5b611db18782880161123d565b94505060208501356001600160401b03811115611dd057611dd0600080fd5b611ddc8782880161123d565b9350506040611ded878288016111c2565b9250506060611dfe878288016111b1565b91505092959194509250565b600060608284031215611e1f57611e1f600080fd5b50919050565b600060208284031215611e3a57611e3a600080fd5b81356001600160401b03811115611e5357611e53600080fd5b61089184828501611e0a565b600060208284031215611e7457611e74600080fd5b81356001600160401b03811115611e8d57611e8d600080fd5b61089184828501611261565b600060208284031215611eae57611eae600080fd5b81356001600160401b03811115611ec757611ec7600080fd5b61089184828501611842565b600060208284031215611ee857611ee8600080fd5b81356001600160401b03811115611f0157611f01600080fd5b6108918482850161133c565b634e487b7160e01b600052603260045260246000fd5b60005b83811015611f3e578181015183820152602001611f26565b838111156110875750506000910152565b6000611f59825190565b611f67818560208601611f23565b9290920192915050565b8061154a565b6000611f838285611f4f565b9150611f8f8284611f71565b5060200192915050565b634e487b7160e01b600052601160045260246000fd5b60006000198203611fc257611fc2611f99565b5060010190565b60808101611fd78287611548565b611fe46020830186611548565b611ff16040830185611548565b6104be606083018461196a565b6060810161200c8286611548565b6120196020830185611548565b6108916040830184611548565b61190160f01b8152600201600061203d8285611f71565b602082019150611f8f8284611f71565b6000612057825190565b80845260208401935061206e818560208601611f23565b612077816110fd565b9093019392505050565b6040810161208f8285611548565b8181036020830152610891818461204d565b6001600160e01b031981166111a3565b80516106a5816120a1565b6000602082840312156120d1576120d1600080fd5b600061089184846120b1565b6011815260006020820170494e56414c49445f5349474e415455524560781b815291505b5060200190565b602080825281016106a5816120dd565b60a081016121268288611548565b6121336020830187611548565b6121406040830186611548565b61214d6060830185611548565b61215a608083018461196a565b9695505050505050565b60a081016121728288611548565b61217f602083018761196a565b61218c6040830186611548565b6121996060830185611548565b61215a6080830184611548565b60006121b2838361196a565b505060200190565b60006121c4825190565b602083018060005b838110156121f15781516121e088826121a6565b9750602083019250506001016121cc565b509495945050505050565b600061077582846121ba565b60006106a536836118ea565b60008235605e193684900301811261222e5761222e600080fd5b9190910192915050565b6000808335601e193685900301811261225357612253600080fd5b8084019250823591506001600160401b0382111561227357612273600080fd5b6020928301928202360383131561228c5761228c600080fd5b509250929050565b606081016122a28286611548565b612019602083018561196a565b600060ff8216915060ff831692508260ff038211156122d0576122d0611f99565b500190565b60ff811661154a565b608081016122ec8287611548565b6122f960208301866122d5565b6123066040830185611548565b6104be6060830184611548565b60008235603e193684900301811261222e5761222e600080fd5b60008235607e193684900301811261222e5761222e600080fd5b60006020828403121561235c5761235c600080fd5b600061089184846111b1565b6000808335601e193685900301811261238357612383600080fd5b8084019250823591506001600160401b038211156123a3576123a3600080fd5b60208301925060018202360383131561228c5761228c600080fd5b600061077536848461147d565b60006106a536836116e4565b602981526000602082017f44656c6567617461626c65436f72653a696e76616c69642d696e766f636174698152681bdb8b5d185c99d95d60ba1b602082015291505b5060400190565b602080825281016106a5816123d7565b602181526000602082017f44656c6567617461626c65436f72653a3a657865637574696f6e2d6661696c658152601960fa1b60208201529150612419565b602080825281016106a581612430565b600082198211156122d0576122d0611f99565b602381526000602082017f44656c6567617461626c65436f72653a6e6f6e6365322d6f75742d6f662d6f728152623232b960e91b60208201529150612419565b602080825281016106a581612491565b602281526000602082017f43616e44656c65676174653a696e76616c69642d726f6f742d617574686f7269815261747960f01b60208201529150612419565b602080825281016106a5816124e1565b602581526000602082017f43616e44656c65676174653a696e76616c69642d64656c65676174696f6e2d7381526434b3b732b960d91b60208201529150612419565b602080825281016106a581612530565b602d81526000602082017f43616e44656c65676174653a696e76616c69642d617574686f726974792d646581526c6c65676174696f6e2d6c696e6b60981b60208201529150612419565b602080825281016106a581612582565b60006106a58260601b90565b60006106a5826125dc565b61154a6125ff82611189565b6125e8565b60006126108285611f4f565b915061261c82846125f3565b5060140192915050565b60006107758284611f4f565b60208082528101610775818461204d565b60408082528101612654818561204d565b9050610775602083018461196a565b80516000906060840190612677858261196a565b50602083015161268a6020860182611548565b50604083015184820360408601526104be828261204d565b606080825281016126b3818661204d565b905081810360208301526126c78185612663565b90506108916040830184611548565b8015156111a3565b80516106a5816126d6565b6000602082840312156126fe576126fe600080fd5b600061089184846126de565b601b81526000602082017a10d85b91195b1959d85d194e98d85d99585d0b5c995a9958dd1959602a1b81529150612101565b602080825281016106a58161270a565b61ffff16600061fffe198201611fc257611fc2611f99565b6000612772611212846111cd565b90508281526020810184848401111561278d5761278d600080fd5b610c9e848285611f23565b600082601f8301126127ac576127ac600080fd5b8151610891848260208601612764565b6000602082840312156127d1576127d1600080fd5b81516001600160401b038111156127ea576127ea600080fd5b6108918482850161279856fe8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400fa2646970667358221220b82ac76fa71e93a43b7ec18a88c9cd2bff6c0caa9a1ce3f3ce32385831f3cf2164736f6c634300080f0033'

type DelegatableFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: DelegatableFacetConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class DelegatableFacet__factory extends ContractFactory {
  constructor(...args: DelegatableFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
    this.contractName = 'DelegatableFacet'
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<DelegatableFacet> {
    return super.deploy(overrides || {}) as Promise<DelegatableFacet>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): DelegatableFacet {
    return super.attach(address) as DelegatableFacet
  }
  connect(signer: Signer): DelegatableFacet__factory {
    return super.connect(signer) as DelegatableFacet__factory
  }
  static readonly contractName: 'DelegatableFacet'
  public readonly contractName: 'DelegatableFacet'
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): DelegatableFacetInterface {
    return new utils.Interface(_abi) as DelegatableFacetInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): DelegatableFacet {
    return new Contract(address, _abi, signerOrProvider) as DelegatableFacet
  }
}
