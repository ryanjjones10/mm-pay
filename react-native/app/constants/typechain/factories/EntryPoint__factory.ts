/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EntryPoint, EntryPointInterface } from "../EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "targetSuccess",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "targetResult",
        type: "bytes",
      },
    ],
    name: "ExecutionResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResult",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "stakeInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        name: "aggregatorInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BeforeExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeDelaySec",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_FAILED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "_validateSenderAndPaymaster",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "withdrawTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "incrementNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "",
        type: "uint192",
      },
    ],
    name: "nonceSequenceNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "op",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "simulateHandleOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a0604052604051620000129062000055565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b506001600160a01b03166080523480156200004957600080fd5b50600160025562000063565b61026f8062004dd083390190565b608051614d4a620000866000396000818161112301526129420152614d4a6000f3fe6080604052600436106100f35760003560e01c80630396cb60146101085780630bd28e3b1461011b5780631b2e01b81461013b5780631d732756146101895780631fad948c146101a9578063205c2878146101c957806335567e1a146101e95780634b1d7cf5146102095780635287ce121461022957806370a08231146102fa5780638f41ec5a1461031a578063957122ab1461032f5780639b249f691461034f578063a61935311461036f578063b760faf91461038f578063bb9fe6bf146103a2578063c23a5cea146103b7578063d6383f94146103d7578063ee219423146103f7578063fc7e286d1461041757600080fd5b366101035761010133610496565b005b600080fd5b610101610116366004612c26565b610502565b34801561012757600080fd5b50610101610136366004612c61565b6106d4565b34801561014757600080fd5b50610173610156366004612cad565b600160209081526000928352604080842090915290825290205481565b6040516101809190612cf2565b60405180910390f35b34801561019557600080fd5b506101736101a4366004612fb6565b61070b565b3480156101b557600080fd5b506101016101c4366004613088565b610941565b3480156101d557600080fd5b506101016101e43660046130e2565b610af4565b3480156101f557600080fd5b50610173610204366004612cad565b610c1c565b34801561021557600080fd5b50610101610224366004613088565b610c61565b34801561023557600080fd5b506102ed610244366004613115565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b031660009081526020818152604091829020825160a08101845281546001600160701b038082168352600160701b820460ff16151594830194909452600160781b90049092169282019290925260019091015463ffffffff81166060830152600160201b900465ffffffffffff16608082015290565b60405161018091906131c4565b34801561030657600080fd5b50610173610315366004613115565b611052565b34801561032657600080fd5b50610173600181565b34801561033b57600080fd5b5061010161034a3660046131d2565b611076565b34801561035b57600080fd5b5061010161036a36600461325f565b611109565b34801561037b57600080fd5b5061017361038a3660046132c2565b6111ba565b61010161039d366004613115565b610496565b3480156103ae57600080fd5b506101016111f6565b3480156103c357600080fd5b506101016103d2366004613115565b6112d6565b3480156103e357600080fd5b506101016103f23660046132fc565b611453565b34801561040357600080fd5b506101016104123660046132c2565b61154e565b34801561042357600080fd5b50610485610432366004613115565b600060208190529081526040902080546001909101546001600160701b0380831692600160701b810460ff1692600160781b9091049091169063ffffffff811690600160201b900465ffffffffffff1685565b60405161018095949392919061336a565b6104a08134611715565b6001600160a01b03811660008181526020819052604090819020805491519092917f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4916104f6916001600160701b0316906133d7565b60405180910390a25050565b33600090815260208190526040902063ffffffff821661053d5760405162461bcd60e51b815260040161053490613419565b60405180910390fd5b600181015463ffffffff908116908316101561056b5760405162461bcd60e51b81526004016105349061345c565b805460009061058b903490600160781b90046001600160701b0316613482565b9050600081116105ad5760405162461bcd60e51b8152600401610534906134be565b6001600160701b038111156105d45760405162461bcd60e51b8152600401610534906134f3565b6040805160a08101825283546001600160701b0390811682526001602080840182815286841685870190815263ffffffff808b16606088019081526000608089018181523380835296829052908a902098518954955194518916600160781b02600160781b600160e81b0319951515600160701b026001600160781b03199097169190991617949094179290921695909517865551949092018054925165ffffffffffff16600160201b026001600160501b0319909316949093169390931717905590517fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01906106c7908490879061351e565b60405180910390a2505050565b3360009081526001602090815260408083206001600160c01b0385168452909152812080549161070383613539565b919050555050565b600061073f604051806040016040528060118152602001700696e20696e6e64657248616e646c654f7607c1b81525061178e565b60005a90503330146107635760405162461bcd60e51b815260040161053490613581565b84516040808201518151808301909252600f82526e18d85b1b11d85cd31a5b5a5d080959608a1b60208301529061079a90826117d4565b6107c5604051806040016040528060098152602001681c1c9951d85cc8095960ba1b815250846117d4565b81606001518101611388015a10156107e85763deaddead60e01b60005260206000fd5b610809604051806060016040528060228152602001614cf36022913961178e565b8751600090156108df57610834604051806060016040528060238152602001614c8e6023913961178e565b6000610847846000015160008c8661181d565b905061086a604051806060016040528060228152602001614cd16022913961178e565b806108dd57600061087c610800611835565b8051909150156108d75784600001516001600160a01b03168a602001517f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a2018760200151846040516108ce9291906135e9565b60405180910390a35b60019250505b505b600088608001515a86030190506109316000838b8b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250611861915050565b955050505050505b949350505050565b60028054036109625760405162461bcd60e51b81526004016105349061363d565b60028055604080518082019091526011815270456e74657265642068616e646c654f707360781b60208201526109979061178e565b816000816001600160401b038111156109b2576109b2612d0a565b6040519080825280602002602001820160405280156109eb57816020015b6109d8612b44565b8152602001906001900390816109d05790505b50905060005b82811015610a64576000828281518110610a0d57610a0d61364d565b60200260200101519050600080610a48848a8a87818110610a3057610a3061364d565b9050602002810190610a429190613663565b85611b4f565b91509150610a598483836000611c94565b5050506001016109f1565b50604051600090600080516020614cb1833981519152908290a160005b83811015610adc57610ad081888884818110610a9f57610a9f61364d565b9050602002810190610ab19190613663565b858481518110610ac357610ac361364d565b6020026020010151611d5c565b90910190600101610a81565b50610ae78482611f0d565b5050600160025550505050565b33600090815260208190526040902080546001600160701b0316821115610b2d5760405162461bcd60e51b8152600401610534906136b8565b8054610b439083906001600160701b03166136c8565b81546001600160701b0319166001600160701b039190911617815560405133907fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb90610b929086908690613710565b60405180910390a26000836001600160a01b031683604051610bb390613735565b60006040518083038185875af1925050503d8060008114610bf0576040519150601f19603f3d011682016040523d82523d6000602084013e610bf5565b606091505b5050905080610c165760405162461bcd60e51b815260040161053490613769565b50505050565b6001600160a01b03821660009081526001602090815260408083206001600160c01b038516845290915290819020549082901b6001600160401b031916175b92915050565b6002805403610c825760405162461bcd60e51b81526004016105349061363d565b60028055816000805b82811015610dc15736868683818110610ca657610ca661364d565b9050602002810190610cb89190613779565b9050366000610cc78380613793565b90925090506000610cde604085016020860161380e565b90506000196001600160a01b03821601610d0a5760405162461bcd60e51b81526004016105349061385d565b6001600160a01b03811615610d9e576001600160a01b03811663e3563a4f8484610d37604089018961386d565b6040518563ffffffff1660e01b8152600401610d569493929190613b37565b60006040518083038186803b158015610d6e57600080fd5b505afa925050508015610d7f575060015b610d9e578060405163086a9f7560e41b81526004016105349190613b5e565b610da88287613482565b9550505050508080610db990613539565b915050610c8b565b506000816001600160401b03811115610ddc57610ddc612d0a565b604051908082528060200260200182016040528015610e1557816020015b610e02612b44565b815260200190600190039081610dfa5790505b50604051909150600080516020614cb183398151915290600090a16000805b84811015610f185736888883818110610e4f57610e4f61364d565b9050602002810190610e619190613779565b9050366000610e708380613793565b90925090506000610e87604085016020860161380e565b90508160005b81811015610eff576000898981518110610ea957610ea961364d565b60200260200101519050600080610ecc8b898987818110610a3057610a3061364d565b91509150610edc84838389611c94565b8a610ee681613539565b9b50505050508080610ef790613539565b915050610e8d565b5050505050508080610f1090613539565b915050610e34565b50600080915060005b8581101561101f5736898983818110610f3c57610f3c61364d565b9050602002810190610f4e9190613779565b9050610f60604082016020830161380e565b6001600160a01b0316600080516020614c6e83398151915260405160405180910390a2366000610f908380613793565b90925090508060005b8181101561100757610fdb88858584818110610fb757610fb761364d565b9050602002810190610fc99190613663565b8b8b81518110610ac357610ac361364d565b610fe59088613482565b965087610ff181613539565b9850508080610fff90613539565b915050610f99565b5050505050808061101790613539565b915050610f21565b50604051600090600080516020614c6e833981519152908290a26110438682611f0d565b50506001600255505050505050565b6001600160a01b03166000908152602081905260409020546001600160701b031690565b8315801561108c57506001600160a01b0383163b155b156110a95760405162461bcd60e51b815260040161053490613b9c565b601481106110f15760006110c06014828486613bac565b6110c991613bdc565b60601c9050803b6000036110ef5760405162461bcd60e51b815260040161053490613c49565b505b60405162461bcd60e51b815260040161053490613c67565b604051632b870d1b60e11b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063570e1a369061115a9086908690600401613c77565b6020604051808303816000875af1158015611179573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119d9190613c94565b905080604051633653dc0360e11b81526004016105349190613b5e565b60006111c582611fb4565b30466040516020016111d993929190613cb5565b604051602081830303815290604052805190602001209050919050565b3360009081526020819052604081206001810154909163ffffffff90911690036112325760405162461bcd60e51b815260040161053490613cfe565b8054600160701b900460ff1661125a5760405162461bcd60e51b815260040161053490613d36565b60018101546000906112729063ffffffff1642613d46565b60018301805465ffffffffffff60201b1916600160201b65ffffffffffff841602179055825460ff60701b1916835560405190915033907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a906104f6908490613d85565b3360009081526020819052604090208054600160781b90046001600160701b0316806113145760405162461bcd60e51b815260040161053490613dbe565b6001820154600160201b900465ffffffffffff166113445760405162461bcd60e51b815260040161053490613e02565b600182015442600160201b90910465ffffffffffff1611156113785760405162461bcd60e51b815260040161053490613e44565b6001820180546001600160501b03191690558154600160781b600160e81b031916825560405133907fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3906113cf9086908590613710565b60405180910390a26000836001600160a01b0316826040516113f090613735565b60006040518083038185875af1925050503d806000811461142d576040519150601f19603f3d011682016040523d82523d6000602084013e611432565b606091505b5050905080610c165760405162461bcd60e51b815260040161053490613e83565b61145b612b44565b61146485611fcd565b60008061147360008885611b4f565b91509150600061148383836120a0565b905061148e43600052565b600061149c60008a87611d5c565b90506114a743600052565b600060606001600160a01b038a161561151d57896001600160a01b031689896040516114d4929190613ea6565b6000604051808303816000865af19150503d8060008114611511576040519150601f19603f3d011682016040523d82523d6000602084013e611516565b606091505b5090925090505b866080015183856020015186604001518585604051630116f59360e71b815260040161053496959493929190613eb3565b611556612b44565b61155f82611fcd565b60008061156e60008585611b4f565b915091506000611585846000015160a00151612159565b84515190915060009061159790612159565b90506115a1612bce565b3660006115b160408a018a61386d565b9092509050600060148210156115c85760006115e3565b6115d6601460008486613bac565b6115df91613bdc565b60601c5b90506115ee81612159565b935050505060006115ff86866120a0565b9050600081600001519050600060016001600160a01b0316826001600160a01b031614905060006040518060c001604052808b6080015181526020018b6040015181526020018315158152602001856020015165ffffffffffff168152602001856040015165ffffffffffff16815260200161167c8c6060015190565b905290506001600160a01b038316158015906116a257506001600160a01b038316600114155b156116f45760006040518060400160405280856001600160a01b031681526020016116cc86612159565b81525090508187878a84604051633ebb2d3960e21b8152600401610534959493929190613fdc565b8086868960405163e0cff05f60e01b81526004016105349493929190614024565b6001600160a01b038216600090815260208190526040812080549091906117469084906001600160701b0316613482565b90506001600160701b0381111561176f5760405162461bcd60e51b815260040161053490614085565b81546001600160701b0319166001600160701b03919091161790555050565b6117d1816040516024016117a29190614095565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526121a1565b50565b61181982826040516024016117ea9291906140a6565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526121a1565b5050565b6000806000845160208601878987f195945050505050565b60603d828111156118435750815b604051602082018101604052818152816000602083013e9392505050565b6000805a9050611899604051806040016040528060118152602001700696e2068616e646c6520706f7374206f7607c1b81525061178e565b8451600090816118a8826121c2565b60a08301519091506001600160a01b0381166118c75782519350611a42565b809350600088511115611a4257868202955060028a60028111156118ed576118ed6140c6565b1461195f57606083015160405163a9a2340960e01b81526001600160a01b0383169163a9a2340991611927908e908d908c9060040161410a565b600060405180830381600088803b15801561194157600080fd5b5087f1158015611955573d6000803e3d6000fd5b5050505050611a42565b606083015160405163a9a2340960e01b81526001600160a01b0383169163a9a2340991611994908e908d908c9060040161410a565b600060405180830381600088803b1580156119ae57600080fd5b5087f1935050505080156119c0575060015b611a42576119cc614139565b806308c379a003611a2557506119e0614154565b806119eb5750611a27565b8b816040516020016119fd91906141fb565b60408051601f1981840301815290829052631101335b60e11b825261053492916004016135e9565b505b8a604051631101335b60e11b8152600401610534919061424f565b611a806040518060400160405280601f81526020017f696e2068616e646c6520706f7374206f7020616674657220696620656c73650081525061178e565b5a85038701965081870295508589604001511015611ab3578a604051631101335b60e11b815260040161053491906142a0565b6040890151869003611ac58582611715565b6000808c6002811115611ada57611ada6140c6565b1490508460a001516001600160a01b031685600001516001600160a01b03168c602001517f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f8860200151858d8f604051611b3794939291906142bf565b60405180910390a45050505050505095945050505050565b60008060005a8451909150611b6486826121ea565b611b6d866111ba565b6020860152604081015160608201516080830151171760e087013517610100870135176001600160781b03811115611bb75760405162461bcd60e51b815260040161053490614323565b600080611bc3846122b3565b9050611bd18a8a8a84612300565b85516020870151919950919350611be89190612521565b611c075789604051631101335b60e11b81526004016105349190614364565b611c1043600052565b60a08401516060906001600160a01b031615611c3857611c338b8b8b858761256e565b975090505b60005a87039050808b60a001351015611c66578b604051631101335b60e11b815260040161053491906143b7565b60408a018390528160608b015260c08b01355a8803018a608001818152505050505050505050935093915050565b600080611ca0856126fa565b91509150816001600160a01b0316836001600160a01b031614611cd85785604051631101335b60e11b81526004016105349190614401565b8015611cf95785604051631101335b60e11b8152600401610534919061444e565b6000611d04856126fa565b925090506001600160a01b03811615611d325786604051631101335b60e11b81526004016105349190614498565b8115611d535786604051631101335b60e11b815260040161053491906144b7565b50505050505050565b6000805a90506000611d6f846060015190565b905030631d732756611d84606088018861386d565b87856040518563ffffffff1660e01b8152600401611da59493929190614604565b6020604051808303816000875af1925050508015611de0575060408051601f3d908101601f19168201909252611ddd91810190614644565b60015b611ec957611e19604051806040016040528060148152602001731a5b9b995c92185b991b1953dc0811905253115160621b81525061178e565b600060206000803e50600051611e2e8161274d565b63deaddead60e01b8103611e575786604051631101335b60e11b8152600401610534919061468b565b611e946040518060400160405280601c81526020017b1a5b9b995c92185b991b1953dc0818599d195c881c995d995c9d195960221b81525061178e565b600085608001515a611ea690866136c8565b611eb09190613482565b9050611ec0886002888685611861565b94505050611f04565b611f01604051806040016040528060178152602001761a5b9b995c92185b991b1953dc081cdd58d8d959591959604a1b81525061178e565b92505b50509392505050565b6001600160a01b038216611f335760405162461bcd60e51b8152600401610534906146d9565b6000826001600160a01b031682604051611f4c90613735565b60006040518083038185875af1925050503d8060008114611f89576040519150601f19603f3d011682016040523d82523d6000602084013e611f8e565b606091505b5050905080611faf5760405162461bcd60e51b81526004016105349061471d565b505050565b6000611fbf82612790565b805190602001209050919050565b3063957122ab611fe0604084018461386d565b611fed6020860186613115565b611ffb61012087018761386d565b6040518663ffffffff1660e01b815260040161201b95949392919061472d565b60006040518083038186803b15801561203357600080fd5b505afa925050508015612044575060015b6117d157612050614139565b806308c379a0036120945750612064614154565b8061206f5750612096565b80511561181957600081604051631101335b60e11b8152600401610534929190614781565b505b3d6000803e3d6000fd5b6120a8612be8565b60006120b384612838565b905060006120c084612838565b82519091506001600160a01b0381166120d7575080515b602080840151604080860151928501519085015191929165ffffffffffff8083169085161015612105578193505b8065ffffffffffff168365ffffffffffff161115612121578092505b5050604080516060810182526001600160a01b03909416845265ffffffffffff92831660208501529116908201529250505092915050565b612161612bce565b6001600160a01b0390911660009081526020818152604090912080546001600160701b03600160781b9091041683526001015463ffffffff169082015290565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60c081015160e0820151600091908082036121de575092915050565b61093982488301612894565b6121f76020830183613115565b6001600160a01b0316815260208083013590820152608080830135604083015260a0830135606083015260c0808401359183019190915260e080840135918301919091526101008301359082015236600061225661012085018561386d565b909250905080156122a65760148110156122825760405162461bcd60e51b8152600401610534906147c3565b612290601460008385613bac565b61229991613bdc565b60601c60a0840152610c16565b600060a084015250505050565b60a081015160009081906001600160a01b03166122d15760016122d4565b60035b60ff16905060008360800151828560600151028560400151010190508360c00151810292505050919050565b60008060005a8551805191925090612325898861232060408c018c61386d565b6128ac565b60a082015161233343600052565b60006001600160a01b03821661236657600061234e84611052565b905088811161235f57808903612362565b60005b9150505b606084015160208a0151604051633a871cdd60e01b81526001600160a01b03861692633a871cdd9290916123a0918f9187906004016147d3565b60206040518083038160008887f1935050505080156123dc575060408051601f3d908101601f191682019092526123d991810190614644565b60015b612436576123e8614139565b806308c379a00361241957506123fc614154565b80612407575061241b565b8b816040516020016119fd91906147f3565b505b8a604051631101335b60e11b81526004016105349190614848565b95506001600160a01b03821661250e576001600160a01b0383166000908152602081815260409182902080548351808501909452600a84526919195c1bdcda5d0f495960b21b92840192909252916001600160701b039091169061249a90826117d4565b6124ce604051806040016040528060128152602001711c995c5d5a5c9959141c99599d5b990f495960721b8152508b6117d4565b808a11156124f1578c604051631101335b60e11b81526004016105349190614895565b81546001600160701b031916908a90036001600160701b03161790555b5a85039650505050505094509492505050565b6001600160a01b038216600090815260016020908152604080832084821c80855292528220805484916001600160401b03831691908561256083613539565b909155501495945050505050565b8251606081810151909160009184811161259a5760405162461bcd60e51b8152600401610534906148e8565b60a08201516001600160a01b038116600090815260208190526040902080548784039291906001600160701b0316898110156125eb578c604051631101335b60e11b8152600401610534919061492c565b8981038260000160006101000a8154816001600160701b0302191690836001600160701b03160217905550826001600160a01b031663f465c77e858e8e602001518e6040518563ffffffff1660e01b815260040161264b939291906147d3565b60006040518083038160008887f19350505050801561268c57506040513d6000823e601f3d908101601f1916820160405261268991908101906149a3565b60015b6126e657612698614139565b806308c379a0036126c957506126ac614154565b806126b757506126cb565b8d816040516020016119fd91906149ef565b505b8c604051631101335b60e11b81526004016105349190614a38565b909e909d509b505050505050505050505050565b6000808260000361271057506000928392509050565b600061271b84612838565b9050806040015165ffffffffffff164211806127425750806020015165ffffffffffff1642105b905194909350915050565b6117d1816040516024016127619190612cf2565b60408051601f198184030181529190526020810180516001600160e01b03166327b7cf8560e01b1790526121a1565b60608135602083013560006127b06127ab604087018761386d565b612aec565b905060006127c46127ab606088018861386d565b9050608086013560a087013560c088013560e08901356101008a013560006127f36127ab6101208e018e61386d565b9050898989898989898989896040516020016128189a99989796959493929190614a57565b6040516020818303038152906040529a5050505050505050505050919050565b612840612be8565b8160a081901c65ffffffffffff811660000361285f575065ffffffffffff5b604080516060810182526001600160a01b03909316835260d09490941c602083015265ffffffffffff16928101929092525090565b60008183106128a357816128a5565b825b9392505050565b8015610c16578251516001600160a01b0381163b156128e05784604051631101335b60e11b81526004016105349190614b20565b612922604051806040016040528060188152602001771d995c9a599a58d85d1a5bdb91d85cd31a5b5a5d0e88095960421b8152508560000151606001516117d4565b835160600151604051632b870d1b60e11b81526000916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163570e1a36919061297a9088908890600401613c77565b60206040518083038160008887f1158015612999573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906129be9190613c94565b90506129ec6040518060400160405280600a81526020016973656e646572313d257360b01b81525082612aff565b6001600160a01b038116612a155785604051631101335b60e11b81526004016105349190614b71565b816001600160a01b0316816001600160a01b031614612a495785604051631101335b60e11b81526004016105349190614bc2565b806001600160a01b03163b600003612a765785604051631101335b60e11b81526004016105349190614c13565b6000612a856014828688613bac565b612a8e91613bdc565b60601c9050826001600160a01b031686602001517fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d83896000015160a00151604051612adb929190614c32565b60405180910390a350505050505050565b6000604051828085833790209392505050565b6118198282604051602401612b15929190614c4d565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526121a1565b6040518060a00160405280612ba960405180610100016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b8152602001600080191681526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b604080516060810182526000808252602082018190529181019190915290565b63ffffffff81165b81146117d157600080fd5b8035610c5b81612c08565b600060208284031215612c3b57612c3b600080fd5b60006109398484612c1b565b6001600160c01b038116612c10565b8035610c5b81612c47565b600060208284031215612c7657612c76600080fd5b60006109398484612c56565b6001600160a01b031690565b6000610c5b82612c82565b612c1081612c8e565b8035610c5b81612c99565b60008060408385031215612cc357612cc3600080fd5b6000612ccf8585612ca2565b9250506020612ce085828601612c56565b9150509250929050565b805b82525050565b60208101610c5b8284612cea565b601f01601f191690565b634e487b7160e01b600052604160045260246000fd5b612d2982612d00565b81018181106001600160401b0382111715612d4657612d46612d0a565b6040525050565b6000612d5860405190565b9050612d648282612d20565b919050565b60006001600160401b03821115612d8257612d82612d0a565b612d8b82612d00565b60200192915050565b82818337506000910152565b6000612db3612dae84612d69565b612d4d565b905082815260208101848484011115612dce57612dce600080fd5b612dd9848285612d94565b509392505050565b600082601f830112612df557612df5600080fd5b8135610939848260208601612da0565b80612c10565b8035610c5b81612e05565b60006101008284031215612e2c57612e2c600080fd5b612e37610100612d4d565b90506000612e458484612ca2565b8252506020612e5684848301612e0b565b6020830152506040612e6a84828501612e0b565b6040830152506060612e7e84828501612e0b565b6060830152506080612e9284828501612e0b565b60808301525060a0612ea684828501612ca2565b60a08301525060c0612eba84828501612e0b565b60c08301525060e0612ece84828501612e0b565b60e08301525092915050565b60006101808284031215612ef057612ef0600080fd5b612efa60a0612d4d565b90506000612f088484612e16565b825250610100612f1a84848301612e0b565b602083015250610120612f2f84828501612e0b565b604083015250610140612f4484828501612e0b565b606083015250610160612f5984828501612e0b565b60808301525092915050565b60008083601f840112612f7a57612f7a600080fd5b5081356001600160401b03811115612f9457612f94600080fd5b602083019150836001820283011115612faf57612faf600080fd5b9250929050565b6000806000806101c08587031215612fd057612fd0600080fd5b84356001600160401b03811115612fe957612fe9600080fd5b612ff587828801612de1565b945050602061300687828801612eda565b9350506101a08501356001600160401b0381111561302657613026600080fd5b61303287828801612f65565b95989497509550505050565b60008083601f84011261305357613053600080fd5b5081356001600160401b0381111561306d5761306d600080fd5b602083019150836020820283011115612faf57612faf600080fd5b6000806000604084860312156130a0576130a0600080fd5b83356001600160401b038111156130b9576130b9600080fd5b6130c58682870161303e565b935093505060206130d886828701612ca2565b9150509250925092565b600080604083850312156130f8576130f8600080fd5b60006131048585612ca2565b9250506020612ce085828601612e0b565b60006020828403121561312a5761312a600080fd5b60006109398484612ca2565b6001600160701b038116612cec565b801515612cec565b63ffffffff8116612cec565b65ffffffffffff8116612cec565b805160a08301906131788482613136565b50602082015161318b6020850182613145565b50604082015161319e6040850182613136565b5060608201516131b1606085018261314d565b506080820151610c166080850182613159565b60a08101610c5b8284613167565b6000806000806000606086880312156131ed576131ed600080fd5b85356001600160401b0381111561320657613206600080fd5b61321288828901612f65565b9550955050602061322588828901612ca2565b93505060408601356001600160401b0381111561324457613244600080fd5b61325088828901612f65565b92509250509295509295909350565b6000806020838503121561327557613275600080fd5b82356001600160401b0381111561328e5761328e600080fd5b61329a85828601612f65565b92509250509250929050565b600061016082840312156132bc576132bc600080fd5b50919050565b6000602082840312156132d7576132d7600080fd5b81356001600160401b038111156132f0576132f0600080fd5b610939848285016132a6565b6000806000806060858703121561331557613315600080fd5b84356001600160401b0381111561332e5761332e600080fd5b61333a878288016132a6565b945050602061334b87828801612ca2565b93505060408501356001600160401b0381111561302657613026600080fd5b60a081016133788288613136565b6133856020830187613145565b6133926040830186613136565b61339f606083018561314d565b6133ac6080830184613159565b9695505050505050565b6000610c5b6133cb6001600160701b03841681565b90565b612cec816133b6565b60208101610c5b82846133ce565b601a8152600060208201796d757374207370656369667920756e7374616b652064656c617960301b815291505b5060200190565b60208082528101610c5b816133e5565b601c81526000602082017b63616e6e6f7420646563726561736520756e7374616b652074696d6560201b81529150613412565b60208082528101610c5b81613429565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c5b57610c5b61346c565b60128152600060208201711b9bc81cdd185ad9481cdc1958da599a595960721b81529150613412565b60208082528101610c5b81613495565b600e81526000602082016d7374616b65206f766572666c6f7760901b81529150613412565b60208082528101610c5b816134ce565b6000610c5b6133cb63ffffffff841681565b612cec81613503565b6040810161352c8285612cea565b6128a56020830184613515565b6000600019820361354c5761354c61346c565b5060010190565b60178152600060208201764141393220696e7465726e616c2063616c6c206f6e6c7960481b81529150613412565b60208082528101610c5b81613553565b60005b838110156135ac578181015183820152602001613594565b50506000910152565b60006135bf825190565b8084526020840193506135d6818560208601613591565b6135df81612d00565b9093019392505050565b604081016135f78285612cea565b818103602083015261093981846135b5565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081529150613412565b60208082528101610c5b81613609565b634e487b7160e01b600052603260045260246000fd5b6000823561015e193684900301811261367e5761367e600080fd5b9190910192915050565b6019815260006020820178576974686472617720616d6f756e7420746f6f206c6172676560381b81529150613412565b60208082528101610c5b81613688565b81810381811115610c5b57610c5b61346c565b6000610c5b6136ec6133cb84612c82565b612c82565b6000610c5b826136db565b6000610c5b826136f1565b612cec816136fc565b6040810161371e8285613707565b6128a56020830184612cea565b6000815b91505090565b6000610c5b8261372b565b60128152600060208201716661696c656420746f20776974686472617760701b81529150613412565b60208082528101610c5b81613740565b60008235605e193684900301811261367e5761367e600080fd5b6000808335601e19368590030181126137ae576137ae600080fd5b8084019250823591506001600160401b038211156137ce576137ce600080fd5b602092830192820236038313156137e7576137e7600080fd5b509250929050565b6000610c5b82612c8e565b612c10816137ef565b8035610c5b816137fa565b60006020828403121561382357613823600080fd5b60006109398484613803565b601781526000602082017620a09c9b1034b73b30b634b21030b3b3b932b3b0ba37b960491b81529150613412565b60208082528101610c5b8161382f565b6000808335601e193685900301811261388857613888600080fd5b8084019250823591506001600160401b038211156138a8576138a8600080fd5b6020830192506001820236038313156137e7576137e7600080fd5b60006128a56020840184612ca2565b612cec81612c8e565b60006128a56020840184612e0b565b6000808335601e193685900301811261390557613905600080fd5b8381016020810193503591506001600160401b0382111561392857613928600080fd5b368290038313156137e7576137e7600080fd5b8183526000602084019350613951838584612d94565b6135df83612d00565b6000610160830161396b83806138c3565b61397585826138d2565b5061398360208401846138db565b6139906020860182612cea565b5061399e60408401846138ea565b85830360408701526139b183828461393b565b925050506139c260608401846138ea565b85830360608701526139d583828461393b565b925050506139e660808401846138db565b6139f36080860182612cea565b50613a0160a08401846138db565b613a0e60a0860182612cea565b50613a1c60c08401846138db565b613a2960c0860182612cea565b50613a3760e08401846138db565b613a4460e0860182612cea565b50613a536101008401846138db565b613a61610100860182612cea565b50613a706101208401846138ea565b858303610120870152613a8483828461393b565b92505050613a966101408401846138ea565b8583036101408701526133ac83828461393b565b60006128a5838361395a565b6000823561015e1936849003018112613ad157613ad1600080fd5b90910192915050565b818352600060208401935083602084028101838060005b87811015613b2a578484038952613b088284613ab6565b613b128582613aaa565b94506020830160209a909a0199925050600101613af1565b5091979650505050505050565b60408082528101613b49818688613ada565b905081810360208301526133ac81848661393b565b60208101610c5b82846138d2565b601981526000602082017810504c8c081858d8dbdd5b9d081b9bdd0819195c1b1bde5959603a1b81529150613412565b60208082528101610c5b81613b6c565b60008085851115613bbf57613bbf600080fd5b83861115613bcf57613bcf600080fd5b5050820193919092039150565b80356001600160601b03191682826014821015613c0f57613c0a6001600160601b0319836014036008021b90565b831692505b505092915050565b601b81526000602082017a10504ccc081c185e5b585cdd195c881b9bdd0819195c1b1bde5959602a1b81529150613412565b60208082528101610c5b81613c17565b60008082526020820161372f565b60208082528101610c5b81613c59565b6020808252810161093981848661393b565b8051610c5b81612c99565b600060208284031215613ca957613ca9600080fd5b60006109398484613c89565b60608101613cc38286612cea565b613cd060208301856138d2565b6109396040830184612cea565b600a8152600060208201691b9bdd081cdd185ad95960b21b81529150613412565b60208082528101610c5b81613cdd565b6011815260006020820170616c726561647920756e7374616b696e6760781b81529150613412565b60208082528101610c5b81613d0e565b65ffffffffffff918216919081169082820190811115610c5b57610c5b61346c565b6000610c5b6133cb65ffffffffffff841681565b612cec81613d68565b60208101610c5b8284613d7c565b60148152600060208201734e6f207374616b6520746f20776974686472617760601b81529150613412565b60208082528101610c5b81613d93565b601d81526000602082017f6d7573742063616c6c20756e6c6f636b5374616b65282920666972737400000081529150613412565b60208082528101610c5b81613dce565b601b81526000602082017a5374616b65207769746864726177616c206973206e6f742064756560281b81529150613412565b60208082528101610c5b81613e12565b60188152600060208201776661696c656420746f207769746864726177207374616b6560401b81529150613412565b60208082528101610c5b81613e54565b6000613ea0838584612d94565b50500190565b6000610939828486613e93565b60c08101613ec18289612cea565b613ece6020830188612cea565b613edb6040830187613159565b613ee86060830186613159565b613ef56080830185613145565b81810360a0830152613f0781846135b5565b98975050505050505050565b805160009060c0840190613f278582612cea565b506020830151613f3a6020860182612cea565b506040830151613f4d6040860182613145565b506060830151613f606060860182613159565b506080830151613f736080860182613159565b5060a083015184820360a0860152613f8b82826135b5565b95945050505050565b80516040830190613fa58482612cea565b506020820151610c166020850182612cea565b80516060830190613fc984826138d2565b506020820151610c166020850182613f94565b6101408082528101613fee8188613f13565b9050613ffd6020830187613f94565b61400a6060830186613f94565b61401760a0830185613f94565b6133ac60e0830184613fb8565b60e080825281016140358187613f13565b90506140446020830186613f94565b6140516060830185613f94565b613f8b60a0830184613f94565b601081526000602082016f6465706f736974206f766572666c6f7760801b81529150613412565b60208082528101610c5b8161405e565b602080825281016128a581846135b5565b604080825281016140b781856135b5565b90506128a56020830184612cea565b634e487b7160e01b600052602160045260246000fd5b600381106117d1576117d16140c6565b80612d64816140dc565b6000610c5b826140ec565b612cec816140f6565b606081016141188286614101565b818103602083015261412a81856135b5565b90506109396040830184612cea565b600060033d11156133cb5760046000803e5060005160e01c90565b600060443d10156141625790565b60405160043d036004823e80513d60248201116001600160401b038211171561418a57505090565b80820180516001600160401b038111156141a5575050505090565b80602083010160043d0385018111156141c057505050505090565b6141cf82602001850186612d20565b5090949350505050565b60006141e3825190565b6141f1818560208601613591565b9290920192915050565b75020a09a98103837b9ba27b8103932bb32b93a32b21d160551b815260160160006128a582846141d9565b601281526000602082017110504d4c081c1bdcdd13dc081c995d995c9d60721b81529150613412565b6040810161425d8284612cea565b81810360208301526128a581614226565b60208082527f414135312070726566756e642062656c6f772061637475616c476173436f737491019081526000613412565b604081016142ae8284612cea565b81810360208301526128a58161426e565b608081016142cd8287612cea565b6142da6020830186613145565b6142e76040830185612cea565b613f8b6060830184612cea565b601881526000602082017741413934206761732076616c756573206f766572666c6f7760401b81529150613412565b60208082528101610c5b816142f4565b601a8152600060208201794141323520696e76616c6964206163636f756e74206e6f6e636560301b81529150613412565b604081016143728284612cea565b81810360208301526128a581614333565b601e81526000602082017f41413430206f76657220766572696669636174696f6e4761734c696d6974000081529150613412565b604081016143c58284612cea565b81810360208301526128a581614383565b601481526000602082017320a0991a1039b4b3b730ba3ab9329032b93937b960611b81529150613412565b6040810161440f8284612cea565b81810360208301526128a5816143d6565b6017815260006020820176414132322065787069726564206f72206e6f742064756560481b81529150613412565b6040810161445c8284612cea565b81810360208301526128a581614420565b601481526000602082017320a0999a1039b4b3b730ba3ab9329032b93937b960611b81529150613412565b604081016144a68284612cea565b81810360208301526128a58161446d565b604081016144c58284612cea565b81810360208301526128a581602181527f41413332207061796d61737465722065787069726564206f72206e6f742064756020820152606560f81b604082015260600190565b805161010083019061451d84826138d2565b5060208201516145306020850182612cea565b5060408201516145436040850182612cea565b5060608201516145566060850182612cea565b5060808201516145696080850182612cea565b5060a082015161457c60a08501826138d2565b5060c082015161458f60c0850182612cea565b5060e0820151610c1660e0850182612cea565b80516101808301906145b4848261450b565b5060208201516145c8610100850182612cea565b5060408201516145dc610120850182612cea565b5060608201516145f0610140850182612cea565b506080820151610c16610160850182612cea565b6101c0808252810161461781868861393b565b905061462660208301856145a2565b8181036101a08301526133ac81846135b5565b8051610c5b81612e05565b60006020828403121561465957614659600080fd5b60006109398484614639565b600f81526000602082016e41413935206f7574206f662067617360881b81529150613412565b604081016146998284612cea565b81810360208301526128a581614665565b60188152600060208201774141393020696e76616c69642062656e656669636961727960401b81529150613412565b60208082528101610c5b816146aa565b601f81526000602082017f41413931206661696c65642073656e6420746f2062656e65666963696172790081529150613412565b60208082528101610c5b816146e9565b6060808252810161473f81878961393b565b905061474e60208301866138d2565b818103604083015261476181848661393b565b979650505050505050565b6000610c5b6133cb8381565b612cec8161476c565b604081016135f78285614778565b601d81526000602082017f4141393320696e76616c6964207061796d6173746572416e644461746100000081529150613412565b60208082528101610c5b8161478f565b606080825281016147e4818661395a565b9050613cd06020830185612cea565b6e020a09919903932bb32b93a32b21d1608d1b815260005b600f820191506128a582846141d9565b60168152600060208201754141323320726576657274656420286f72204f4f472960501b81529150613412565b604081016148568284612cea565b81810360208301526128a58161481b565b601781526000602082017610504c8c48191a591b89dd081c185e481c1c99599d5b99604a1b81529150613412565b604081016148a38284612cea565b81810360208301526128a581614867565b601f81526000602082017f4141343120746f6f206c6974746c6520766572696669636174696f6e4761730081529150613412565b60208082528101610c5b816148b4565b601e81526000602082017f41413331207061796d6173746572206465706f73697420746f6f206c6f77000081529150613412565b6040810161493a8284612cea565b81810360208301526128a5816148f8565b6000614959612dae84612d69565b90508281526020810184848401111561497457614974600080fd5b612dd9848285613591565b600082601f83011261499357614993600080fd5b815161093984826020860161494b565b600080604083850312156149b9576149b9600080fd5b82516001600160401b038111156149d2576149d2600080fd5b6149de8582860161497f565b9250506020612ce085828601614639565b6e020a09999903932bb32b93a32b21d1608d1b8152600061480b565b60168152600060208201754141333320726576657274656420286f72204f4f472960501b81529150613412565b60408101614a468284612cea565b81810360208301526128a581614a0b565b6101408101614a66828d6138d2565b614a73602083018c612cea565b614a80604083018b612cea565b614a8d606083018a612cea565b614a9a6080830189612cea565b614aa760a0830188612cea565b614ab460c0830187612cea565b614ac160e0830186612cea565b614acf610100830185612cea565b614add610120830184612cea565b9b9a5050505050505050505050565b601f81526000602082017f414131302073656e64657220616c726561647920636f6e73747275637465640081529150613412565b60408101614b2e8284612cea565b81810360208301526128a581614aec565b601b81526000602082017a4141313320696e6974436f6465206661696c6564206f72204f4f4760281b81529150613412565b60408101614b7f8284612cea565b81810360208301526128a581614b3f565b60208082527f4141313420696e6974436f6465206d7573742072657475726e2073656e64657291019081526000613412565b60408101614bd08284612cea565b81810360208301526128a581614b90565b60208082527f4141313520696e6974436f6465206d757374206372656174652073656e64657291019081526000613412565b60408101614c218284612cea565b81810360208301526128a581614be1565b60408101614c4082856138d2565b6128a560208301846138d2565b60408082528101614c5e81856135b5565b90506128a560208301846138d256fe575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d696e20696e6e64657248616e646c654f703a206265666f726520657865632e63616c6cbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972696e20696e6e64657248616e646c654f703a20616674657220657865632e63616c6c696e20696e6e64657248616e646c654f703a2061667465722067617320636865636ba264697066735822122003da0b201b41cf43b1b0359c046466710def969a263e393839562832a40a725364736f6c63430008120033608060405234801561001057600080fd5b5061024f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e366004610137565b610059565b60405161005091906101a0565b60405180910390f35b60008061006960148285876101ae565b610072916101de565b60601c9050600061008684601481886101ae565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af190506000519350806100dd57600093505b50505092915050565b60008083601f8401126100fb576100fb600080fd5b5081356001600160401b0381111561011557610115600080fd5b60208301915083600182028301111561013057610130600080fd5b9250929050565b6000806020838503121561014d5761014d600080fd5b82356001600160401b0381111561016657610166600080fd5b610172858286016100e6565b92509250509250929050565b60006001600160a01b0382165b92915050565b61019a8161017e565b82525050565b6020810161018b8284610191565b600080858511156101c1576101c1600080fd5b838611156101d1576101d1600080fd5b5050820193919092039150565b80356001600160601b031916828260148210156102115761020c6001600160601b0319836014036008021b90565b831692505b50509291505056fea26469706673582212203c71ef78b126eea5ebcc6a1c1b1ff7cc8e2fbcff1ee0f759e70ee2f590b1ed7f64736f6c63430008120033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EntryPoint";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }
  static readonly contractName: "EntryPoint";
  public readonly contractName: "EntryPoint";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
