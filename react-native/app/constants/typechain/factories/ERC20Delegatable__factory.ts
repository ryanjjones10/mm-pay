/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import '@ethersproject/shims'
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type {
  ERC20Delegatable,
  ERC20DelegatableInterface,
} from '../ERC20Delegatable'

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'to',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'gasLimit',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct Transaction',
            name: 'transaction',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'delegate',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'authority',
                    type: 'bytes32',
                  },
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'enforcer',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes',
                        name: 'terms',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Caveat[]',
                    name: 'caveats',
                    type: 'tuple[]',
                  },
                  {
                    internalType: 'uint256',
                    name: 'salt',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Delegation',
                name: 'message',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'signer',
                type: 'address',
              },
            ],
            internalType: 'struct SignedDelegation[]',
            name: 'authority',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Invocation[]',
        name: 'batch',
        type: 'tuple[]',
      },
    ],
    name: 'contractInvoke',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'domainHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_input',
        type: 'address[]',
      },
    ],
    name: 'getAddressArrayPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'to',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'gasLimit',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'value',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bytes',
                    name: 'data',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Transaction',
                name: 'transaction',
                type: 'tuple',
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'delegate',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes32',
                        name: 'authority',
                        type: 'bytes32',
                      },
                      {
                        components: [
                          {
                            internalType: 'address',
                            name: 'enforcer',
                            type: 'address',
                          },
                          {
                            internalType: 'bytes',
                            name: 'terms',
                            type: 'bytes',
                          },
                        ],
                        internalType: 'struct Caveat[]',
                        name: 'caveats',
                        type: 'tuple[]',
                      },
                      {
                        internalType: 'uint256',
                        name: 'salt',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct Delegation',
                    name: 'message',
                    type: 'tuple',
                  },
                  {
                    internalType: 'bytes',
                    name: 'signature',
                    type: 'bytes',
                  },
                  {
                    internalType: 'address',
                    name: 'signer',
                    type: 'address',
                  },
                ],
                internalType: 'struct SignedDelegation[]',
                name: 'authority',
                type: 'tuple[]',
              },
            ],
            internalType: 'struct Invocation[]',
            name: 'invocations',
            type: 'tuple[]',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'nonce',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'queue',
                type: 'uint256',
              },
            ],
            internalType: 'struct ReplayProtection',
            name: 'replayProtection',
            type: 'tuple',
          },
        ],
        internalType: 'struct Batch',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getBatchPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'enforcer',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'terms',
            type: 'bytes',
          },
        ],
        internalType: 'struct Caveat[]',
        name: '_input',
        type: 'tuple[]',
      },
    ],
    name: 'getCaveatArrayPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'enforcer',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'terms',
            type: 'bytes',
          },
        ],
        internalType: 'struct Caveat',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getCaveatPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'delegate',
            type: 'address',
          },
          {
            internalType: 'bytes32',
            name: 'authority',
            type: 'bytes32',
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'enforcer',
                type: 'address',
              },
              {
                internalType: 'bytes',
                name: 'terms',
                type: 'bytes',
              },
            ],
            internalType: 'struct Caveat[]',
            name: 'caveats',
            type: 'tuple[]',
          },
          {
            internalType: 'uint256',
            name: 'salt',
            type: 'uint256',
          },
        ],
        internalType: 'struct Delegation',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getDelegationPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getDomainHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'contractName',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'version',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'verifyingContract',
        type: 'address',
      },
    ],
    name: 'getEIP712DomainHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'name',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'version',
            type: 'string',
          },
          {
            internalType: 'uint256',
            name: 'chainId',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'verifyingContract',
            type: 'address',
          },
        ],
        internalType: 'struct EIP712Domain',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getEip712DomainPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'to',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'gasLimit',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct Transaction',
            name: 'transaction',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'delegate',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'authority',
                    type: 'bytes32',
                  },
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'enforcer',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes',
                        name: 'terms',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Caveat[]',
                    name: 'caveats',
                    type: 'tuple[]',
                  },
                  {
                    internalType: 'uint256',
                    name: 'salt',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Delegation',
                name: 'message',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'signer',
                type: 'address',
              },
            ],
            internalType: 'struct SignedDelegation[]',
            name: 'authority',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Invocation[]',
        name: '_input',
        type: 'tuple[]',
      },
    ],
    name: 'getInvocationArrayPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'to',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'gasLimit',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct Transaction',
            name: 'transaction',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'delegate',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'authority',
                    type: 'bytes32',
                  },
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'enforcer',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes',
                        name: 'terms',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Caveat[]',
                    name: 'caveats',
                    type: 'tuple[]',
                  },
                  {
                    internalType: 'uint256',
                    name: 'salt',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Delegation',
                name: 'message',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'signer',
                type: 'address',
              },
            ],
            internalType: 'struct SignedDelegation[]',
            name: 'authority',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Invocation',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getInvocationPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'signers',
            type: 'address[]',
          },
          {
            internalType: 'uint256',
            name: 'threshold',
            type: 'uint256',
          },
        ],
        internalType: 'struct MultisigParams',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getMultisigparamsPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'intendedSender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'queue',
        type: 'uint256',
      },
    ],
    name: 'getNonce',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'queue',
            type: 'uint256',
          },
        ],
        internalType: 'struct ReplayProtection',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getReplayprotectionPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'to',
                        type: 'address',
                      },
                      {
                        internalType: 'uint256',
                        name: 'gasLimit',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'value',
                        type: 'uint256',
                      },
                      {
                        internalType: 'bytes',
                        name: 'data',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Transaction',
                    name: 'transaction',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: 'address',
                            name: 'delegate',
                            type: 'address',
                          },
                          {
                            internalType: 'bytes32',
                            name: 'authority',
                            type: 'bytes32',
                          },
                          {
                            components: [
                              {
                                internalType: 'address',
                                name: 'enforcer',
                                type: 'address',
                              },
                              {
                                internalType: 'bytes',
                                name: 'terms',
                                type: 'bytes',
                              },
                            ],
                            internalType: 'struct Caveat[]',
                            name: 'caveats',
                            type: 'tuple[]',
                          },
                          {
                            internalType: 'uint256',
                            name: 'salt',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct Delegation',
                        name: 'message',
                        type: 'tuple',
                      },
                      {
                        internalType: 'bytes',
                        name: 'signature',
                        type: 'bytes',
                      },
                      {
                        internalType: 'address',
                        name: 'signer',
                        type: 'address',
                      },
                    ],
                    internalType: 'struct SignedDelegation[]',
                    name: 'authority',
                    type: 'tuple[]',
                  },
                ],
                internalType: 'struct Invocation[]',
                name: 'invocations',
                type: 'tuple[]',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'nonce',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'queue',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ReplayProtection',
                name: 'replayProtection',
                type: 'tuple',
              },
            ],
            internalType: 'struct Batch',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedBatch',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getSignedbatchPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'delegate',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'authority',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'enforcer',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes',
                    name: 'terms',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Caveat[]',
                name: 'caveats',
                type: 'tuple[]',
              },
              {
                internalType: 'uint256',
                name: 'salt',
                type: 'uint256',
              },
            ],
            internalType: 'struct Delegation',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedDelegation[]',
        name: '_input',
        type: 'tuple[]',
      },
    ],
    name: 'getSigneddelegationArrayPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'delegate',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'authority',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'enforcer',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes',
                    name: 'terms',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Caveat[]',
                name: 'caveats',
                type: 'tuple[]',
              },
              {
                internalType: 'uint256',
                name: 'salt',
                type: 'uint256',
              },
            ],
            internalType: 'struct Delegation',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedDelegation',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getSigneddelegationPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address[]',
                name: 'signers',
                type: 'address[]',
              },
              {
                internalType: 'uint256',
                name: 'threshold',
                type: 'uint256',
              },
            ],
            internalType: 'struct MultisigParams',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedMultisigParams',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getSignedmultisigparamsPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'gasLimit',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct Transaction',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getTransactionPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'to',
                        type: 'address',
                      },
                      {
                        internalType: 'uint256',
                        name: 'gasLimit',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'value',
                        type: 'uint256',
                      },
                      {
                        internalType: 'bytes',
                        name: 'data',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Transaction',
                    name: 'transaction',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: 'address',
                            name: 'delegate',
                            type: 'address',
                          },
                          {
                            internalType: 'bytes32',
                            name: 'authority',
                            type: 'bytes32',
                          },
                          {
                            components: [
                              {
                                internalType: 'address',
                                name: 'enforcer',
                                type: 'address',
                              },
                              {
                                internalType: 'bytes',
                                name: 'terms',
                                type: 'bytes',
                              },
                            ],
                            internalType: 'struct Caveat[]',
                            name: 'caveats',
                            type: 'tuple[]',
                          },
                          {
                            internalType: 'uint256',
                            name: 'salt',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct Delegation',
                        name: 'message',
                        type: 'tuple',
                      },
                      {
                        internalType: 'bytes',
                        name: 'signature',
                        type: 'bytes',
                      },
                      {
                        internalType: 'address',
                        name: 'signer',
                        type: 'address',
                      },
                    ],
                    internalType: 'struct SignedDelegation[]',
                    name: 'authority',
                    type: 'tuple[]',
                  },
                ],
                internalType: 'struct Invocation[]',
                name: 'invocations',
                type: 'tuple[]',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'nonce',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'queue',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ReplayProtection',
                name: 'replayProtection',
                type: 'tuple',
              },
            ],
            internalType: 'struct Batch',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedBatch',
        name: 'signedBatch',
        type: 'tuple',
      },
    ],
    name: 'invoke',
    outputs: [
      {
        internalType: 'bool',
        name: 'success',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'to',
                        type: 'address',
                      },
                      {
                        internalType: 'uint256',
                        name: 'gasLimit',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'value',
                        type: 'uint256',
                      },
                      {
                        internalType: 'bytes',
                        name: 'data',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Transaction',
                    name: 'transaction',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: 'address',
                            name: 'delegate',
                            type: 'address',
                          },
                          {
                            internalType: 'bytes32',
                            name: 'authority',
                            type: 'bytes32',
                          },
                          {
                            components: [
                              {
                                internalType: 'address',
                                name: 'enforcer',
                                type: 'address',
                              },
                              {
                                internalType: 'bytes',
                                name: 'terms',
                                type: 'bytes',
                              },
                            ],
                            internalType: 'struct Caveat[]',
                            name: 'caveats',
                            type: 'tuple[]',
                          },
                          {
                            internalType: 'uint256',
                            name: 'salt',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct Delegation',
                        name: 'message',
                        type: 'tuple',
                      },
                      {
                        internalType: 'bytes',
                        name: 'signature',
                        type: 'bytes',
                      },
                      {
                        internalType: 'address',
                        name: 'signer',
                        type: 'address',
                      },
                    ],
                    internalType: 'struct SignedDelegation[]',
                    name: 'authority',
                    type: 'tuple[]',
                  },
                ],
                internalType: 'struct Invocation[]',
                name: 'invocations',
                type: 'tuple[]',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'nonce',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'queue',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ReplayProtection',
                name: 'replayProtection',
                type: 'tuple',
              },
            ],
            internalType: 'struct Batch',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedBatch',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'verifySignedBatch',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'delegate',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'authority',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'enforcer',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes',
                    name: 'terms',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Caveat[]',
                name: 'caveats',
                type: 'tuple[]',
              },
              {
                internalType: 'uint256',
                name: 'salt',
                type: 'uint256',
              },
            ],
            internalType: 'struct Delegation',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedDelegation',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'verifySignedDelegation',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address[]',
                name: 'signers',
                type: 'address[]',
              },
              {
                internalType: 'uint256',
                name: 'threshold',
                type: 'uint256',
              },
            ],
            internalType: 'struct MultisigParams',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedMultisigParams',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'verifySignedMultisigParams',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

const _bytecode =
  '0x60a06040523480156200001157600080fd5b50604051620036923803806200369283398101604081905262000034916200032f565b6040805180820190915260018152603160f81b60208201528390818460036200005e8382620004e0565b5060046200006d8282620004e0565b50505062000084828246306200009f60201b60201c565b6080525062000096905033826200010d565b505050620006a7565b6000807f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f868051906020012086805190602001208686604051602001620000eb959493929190620005d4565b60408051808303601f1901815291905280516020909101209695505050505050565b6001600160a01b0382166200013f5760405162461bcd60e51b815260040162000136906200062a565b60405180910390fd5b80600260008282546200015391906200067c565b90915550506001600160a01b03821660009081526020819052604081208054839290620001829084906200067c565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001c790859062000697565b60405180910390a35b5050565b505050565b601f01601f191690565b634e487b7160e01b600052604160045260246000fd5b6200020482620001d9565b81018181106001600160401b0382111715620002245762000224620001e3565b6040525050565b60006200023760405190565b9050620002458282620001f9565b919050565b60006001600160401b03821115620002665762000266620001e3565b6200027182620001d9565b60200192915050565b60005b83811015620002975781810151838201526020016200027d565b83811115620002a7576000848401525b50505050565b6000620002c4620002be846200024a565b6200022b565b905082815260208101848484011115620002e157620002e1600080fd5b620002ee8482856200027a565b509392505050565b600082601f8301126200030c576200030c600080fd5b81516200031e848260208601620002ad565b949350505050565b80515b92915050565b600080600060608486031215620003495762000349600080fd5b83516001600160401b03811115620003645762000364600080fd5b6200037286828701620002f6565b93505060208401516001600160401b03811115620003935762000393600080fd5b620003a186828701620002f6565b9250506040620003b48682870162000326565b9150509250925092565b634e487b7160e01b600052602260045260246000fd5b600281046001821680620003e957607f821691505b602082108103620003fe57620003fe620003be565b50919050565b600062000329620004128381565b90565b620004208362000404565b81546008840282811b60001990911b908116901990911617825550505050565b6000620001d481848462000415565b81811015620001d0576200046560008262000440565b6001016200044f565b601f821115620001d4576000818152602090206020601f85010481016020851015620004975750805b620004ab6020601f8601048301826200044f565b5050505050565b6000196008929092029190911c191690565b6000620004d28383620004b2565b600290930290921792915050565b81516001600160401b03811115620004fc57620004fc620001e3565b620005088254620003d4565b620005158282856200046e565b6020601f831160018114620005485760008415620005335750858201515b6200053f8582620004c4565b865550620005a7565b600085815260208120601f198616915b828110156200057a578885015182556020948501946001909201910162000558565b868310156200059a578489015162000596601f891682620004b2565b8355505b6001600288020188555050505b505050505050565b805b82525050565b60006001600160a01b03821662000329565b620005b181620005b7565b60a08101620005e48288620005af565b620005f36020830187620005af565b620006026040830186620005af565b620006116060830185620005af565b620006206080830184620005c9565b9695505050505050565b602080825281016200032981601f81527f45524332303a206d696e7420746f20746865207a65726f206164647265737300602082015260400190565b634e487b7160e01b600052601160045260246000fd5b6000821982111562000692576200069262000666565b500190565b60208101620003298284620005af565b608051612fc8620006ca6000396000818161043e01526109120152612fc86000f3fe608060405234801561001057600080fd5b50600436106101a15760003560e01c8063037dd6ff146101a657806306fdde03146101cf57806307cae44d146101e4578063095ea7b3146101f75780630deeb6001461021757806314239de71461022a57806318160ddd1461024a57806323b872dd146102525780632b163c2b14610265578063313ce5671461027857806339509351146102875780633c9f21a01461029a57806359b989ca146102ad5780636eb8aaf4146102c057806370a08231146102d357806383ebb771146102fc578063895358031461030457806393574eed1461033a57806395d89b411461034d5780639dfae31214610355578063a262ec5b14610368578063a2c6cb021461037b578063a457c2d71461038e578063a9059cbb146103a1578063bbd75817146103b4578063bdcc1179146103c7578063d327c1eb146103da578063da334261146103ed578063dbefc91f14610400578063dbf1220014610413578063dd62ed3e14610426578063dfe86ac514610439578063e315644d14610460578063f4fbfd2f14610473578063fb293bd514610486575b600080fd5b6101b96101b4366004611a53565b610499565b6040516101c69190611a95565b60405180910390f35b6101d7610510565b6040516101c69190611b03565b6101b96101f2366004611c26565b6105a2565b61020a610205366004611c60565b610612565b6040516101c69190611ca5565b6101b9610225366004611cb3565b610636565b61023d610238366004611f39565b61067c565b6040516101c69190611f7c565b6002546101b9565b61020a610260366004611f8a565b6107b8565b6101b9610273366004611fda565b6107e8565b60126040516101c6919061201d565b61020a610295366004611c60565b610838565b6101b96102a83660046120c4565b610864565b6101b96102bb3660046120fe565b6108ac565b61023d6102ce366004612138565b610900565b6101b96102e1366004612172565b6001600160a01b031660009081526020819052604090205490565b6101b9610910565b6101b9610312366004611c60565b6001600160a01b03919091166000908152600560209081526040808320938352929052205490565b6101b9610348366004612138565b610934565b6101d7610965565b6101b9610363366004612193565b610974565b61020a6103763660046121fe565b6109b4565b6101b9610389366004612245565b6109c1565b61020a61039c366004611c60565b6109f1565b61020a6103af366004611c60565b610a44565b6101b96103c236600461227f565b610a5c565b6101b96103d53660046122b9565b610aaf565b6101b96103e83660046122f3565b610aed565b61020a6103fb3660046123a5565b610b49565b61023d61040e366004611c26565b610b95565b6101b96104213660046123df565b610ba5565b6101b9610434366004612419565b610bec565b6101b97f000000000000000000000000000000000000000000000000000000000000000081565b6101b961046e36600461244c565b610c17565b6101b9610481366004611f39565b610c7f565b6101b9610494366004612486565b610cb0565b6000606060005b835181101561050157816104cc8583815181106104bf576104bf6124c0565b6020026020010151610934565b6040516020016104dd9291906124f8565b604051602081830303815290604052915080806104f990612531565b9150506104a0565b50805160209091012092915050565b60606003805461051f90612561565b80601f016020809104026020016040519081016040528092919081815260200182805461054b90612561565b80156105985780601f1061056d57610100808354040283529160200191610598565b820191906000526020600020905b81548152906001019060200180831161057b57829003601f168201915b5050505050905090565b6000807ff562bb2887ad46fa4ed8270ec3eb4c4ddaaa8eac6df6a306f0539ed308b63f336105d38460000151610636565b60208086015180519082012060408088015190516105f395949301612587565b60408051601f1981840301815291905280516020909101209392505050565b60008061061d610d18565b905061062a818585610d74565b60019150505b92915050565b6000807ffdaf74c87f80f0094315fc4e85684a5c59e57ac35e3b5b0dfa85df43b3439b5761066784600001516109c1565b6020808601516040516105f3949392016125bc565b60008061068c8360000151610aaf565b90506000610698610910565b826040516020016106aa9291906125e4565b60405160208183030381529060405280519060200120905083604001516001600160a01b031660006001600160a01b0316036106f95760006106f0828660200151610e28565b95945050505050565b600084604001516001600160a01b0316631626ba7e8387602001516040518363ffffffff1660e01b815260040161073192919061260d565b602060405180830381865afa15801561074e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107729190612648565b9050630b135d3f60e11b6001600160e01b03198216146107ad5760405162461bcd60e51b81526004016107a490612694565b60405180910390fd5b505050506040015190565b6000806107c3610d18565b90506107d0858285610ef1565b6107db858585610f3b565b60019150505b9392505050565b6000807f16ce3e7a160ccd1337156522b7b75f86515dce2f84625303c8cb53733473e20e6108198460000151610a5c565b6108268560200151610499565b6040516020016105f3939291906125bc565b600080610843610d18565b905061062a8185856108558589610bec565b61085f91906126a4565b610d74565b600080600080516020612f73833981519152836000015180519060200120846020015180519060200120856040015186606001516040516020016105f39594939291906126bc565b6000807fc868c829d0d249972f3cbb7c51600c4e74dd6ed52ba5192cddc7526c48257a9f836000015184602001516108e78660400151610cb0565b86606001516040516020016105f3959493929190612708565b60008061068c83600001516108ac565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000807fd1ffa191aacebaec8a0767b176d64c69a029e83c7bae7f3fdde5f0c5fdaf35036105d384600001516108ac565b60606004805461051f90612561565b6000807fe8d3d963b33868fb116316bc3fd55e8f49123f30e4418f71e140d54b7cd3b2b9836000015184602001516040516020016105f3939291906125bc565b60006107e183833361104e565b6000816040516020016109d491906127a0565b604051602081830303815290604052805190602001209050919050565b6000806109fc610d18565b90506000610a0a8286610bec565b905083811015610a2c5760405162461bcd60e51b81526004016107a4906127f1565b610a398286868403610d74565b506001949350505050565b600080610a4f610d18565b905061062a818585610f3b565b6000807f8e96309e8d7caab0cd12f924b5671b439d8ee99659ea36357e8cc30e7fe322938360000151846020015185604001518660600151805190602001206040516020016105f3959493929190612708565b6000807f6d01ae502c3d43977868cf20f1077c1dc1970131f37d80ed21ecf591e958d810610ae08460000151610c17565b6108268560200151610974565b600080600080516020612f73833981519152868051906020012086805190602001208686604051602001610b259594939291906126bc565b60408051601f1981840301815291905280516020909101209150505b949350505050565b600080610b5861023884612801565b905036610b65848061280d565b9050610b8282610b7d36849003840160208501612193565b6111ee565b610b41610b8f8280612831565b8461104e565b60008061068c8360000151610636565b6000807f80ad7e1b04ee6d994a125f4714ca0720908bd80ed16063ec8aee4b88e9253e2d83600001518460200151805190602001206040516020016105f39392919061288d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000606060005b83518110156105015781610c4a858381518110610c3d57610c3d6124c0565b60200260200101516107e8565b604051602001610c5b9291906124f8565b60405160208183030381529060405291508080610c7790612531565b915050610c1e565b6000807f220f51b2634e2a90b6fb21f89acf38590ea901923e6240ec90bcd0db8314524c6105d38460000151610aaf565b6000606060005b83518110156105015781610ce3858381518110610cd657610cd66124c0565b6020026020010151610ba5565b604051602001610cf49291906124f8565b60405160208183030381529060405291508080610d1090612531565b915050610cb7565b6000303303610d6e57600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150610d719050565b50335b90565b6001600160a01b038316610d9a5760405162461bcd60e51b81526004016107a4906128e9565b6001600160a01b038216610dc05760405162461bcd60e51b81526004016107a490612938565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610e1b908590611a95565b60405180910390a3505050565b6000806000808451604114610e435760009350505050610630565b50505060208201516040830151606084015160001a601b811015610e6f57610e6c601b82612948565b90505b8060ff16601b14158015610e8757508060ff16601c14155b15610e985760009350505050610630565b60018682858560405160008152602001604052604051610ebb9493929190612969565b6020604051602081039080840390855afa158015610edd573d6000803e3d6000fd5b505050602060405103519350505050610630565b6000610efd8484610bec565b90506000198114610f355781811015610f285760405162461bcd60e51b81526004016107a4906129d2565b610f358484848403610d74565b50505050565b6001600160a01b038316610f615760405162461bcd60e51b81526004016107a490612a24565b6001600160a01b038216610f875760405162461bcd60e51b81526004016107a490612a74565b6001600160a01b03831660009081526020819052604090205481811015610fc05760405162461bcd60e51b81526004016107a490612ac7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610ff79084906126a4565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110419190611a95565b60405180910390a3610f35565b6000805b838110156111e6573685858381811061106d5761106d6124c0565b905060200281019061107f9190612ad7565b60408051606081019091529091506000908061109b8480612af1565b6110a9906020810190612172565b6001600160a01b031681526020016110c18480612af1565b6040013581526020016110d48480612af1565b6110e2906060810190612b0b565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250929350879250905061112c6020850185612831565b90501115611157576111536111446020850185612831565b61114d91612b61565b8361126f565b5090505b60006111638480612af1565b61116c90612b6e565b80519091506001600160a01b031630146111985760405162461bcd60e51b81526004016107a490612bc0565b6111b0816000015182606001518360200151856113a9565b9550856111cf5760405162461bcd60e51b81526004016107a490612c0e565b5050505080806111de90612531565b915050611052565b509392505050565b60208082015182516001600160a01b038516600090815260058452604080822084835290945292909220549091906112279060016126a4565b81146112455760405162461bcd60e51b81526004016107a490612c5e565b6001600160a01b039093166000908152600560209081526040808320938352929052209190915550565b60008080805b855181101561139f576000868281518110611292576112926124c0565b6020026020010151905060006112a782610900565b90506112df6040518060400160405280601481526020017364656c65676174696f6e5369676e65723a20257360601b81525082611489565b815160008490036113135760208101511561130c5760405162461bcd60e51b81526004016107a490612cad565b8196508195505b856001600160a01b0316826001600160a01b0316146113445760405162461bcd60e51b81526004016107a490612cff565b848160200151146113675760405162461bcd60e51b81526004016107a490612d59565b600061137284610934565b905061138382604001518a836114d2565b905195509350829150611397905081612531565b915050611275565b50505b9250929050565b60008084836040516020016113bf929190612d91565b60405160208183030381529060405290506060866001600160a01b031685836040516113eb9190612db3565b60006040518083038160008787f1925050503d8060008114611429576040519150601f19603f3d011682016040523d82523d6000602084013e61142e565b606091505b5090935090508261147f5780511561146757600061144b826115d2565b90508060405162461bcd60e51b81526004016107a49190611b03565b60405162461bcd60e51b81526004016107a490612c0e565b5050949350505050565b6114ce828260405160240161149f929190612dbf565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052611621565b5050565b60005b83518161ffff161015610f35576000848261ffff16815181106114fa576114fa6124c0565b60200260200101516000015190506000816001600160a01b0316635068de4c878561ffff168151811061152f5761152f6124c0565b60200260200101516020015187876040518463ffffffff1660e01b815260040161155b93929190612e1e565b6020604051808303816000875af115801561157a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159e9190612e65565b9050806115bd5760405162461bcd60e51b81526004016107a490612eb8565b505080806115ca90612ec8565b9150506114d5565b805160609060448110156115f6575050604080516020810190915260008152919050565b6004830180516003198301825290936116189083810160200190602401612f38565b93525090919050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b601f01601f191690565b634e487b7160e01b600052604160045260246000fd5b61166b82611642565b81018181106001600160401b03821117156116885761168861164c565b6040525050565b600061169a60405190565b90506116a68282611662565b919050565b60006001600160401b038211156116c4576116c461164c565b5060209081020190565b60006001600160a01b038216610630565b6116e8816116ce565b81146116f357600080fd5b50565b8035610630816116df565b806116e8565b803561063081611701565b60006001600160401b0382111561172b5761172b61164c565b61173482611642565b60200192915050565b82818337506000910152565b600061175c61175784611712565b61168f565b90508281526020810184848401111561177757611777600080fd5b6111e684828561173d565b600082601f83011261179657611796600080fd5b8135610b41848260208601611749565b6000604082840312156117bb576117bb600080fd5b6117c5604061168f565b905060006117d384846116f6565b82525060208201356001600160401b038111156117f2576117f2600080fd5b6117fe84828501611782565b60208301525092915050565b6000611818611757846116ab565b8381529050602080820190840283018581111561183757611837600080fd5b835b818110156118775780356001600160401b0381111561185a5761185a600080fd5b80860161186789826117a6565b8552505060209283019201611839565b5050509392505050565b600082601f83011261189557611895600080fd5b8135610b4184826020860161180a565b6000608082840312156118ba576118ba600080fd5b6118c4608061168f565b905060006118d284846116f6565b82525060206118e384848301611707565b60208301525060408201356001600160401b0381111561190557611905600080fd5b61191184828501611881565b604083015250606061192584828501611707565b60608301525092915050565b60006060828403121561194657611946600080fd5b611950606061168f565b905081356001600160401b0381111561196b5761196b600080fd5b611977848285016118a5565b82525060208201356001600160401b0381111561199657611996600080fd5b6119a284828501611782565b60208301525060406119b6848285016116f6565b60408301525092915050565b60006119d0611757846116ab565b838152905060208082019084028301858111156119ef576119ef600080fd5b835b818110156118775780356001600160401b03811115611a1257611a12600080fd5b808601611a1f8982611931565b85525050602092830192016119f1565b600082601f830112611a4357611a43600080fd5b8135610b418482602086016119c2565b600060208284031215611a6857611a68600080fd5b81356001600160401b03811115611a8157611a81600080fd5b610b4184828501611a2f565b805b82525050565b602081016106308284611a8d565b60005b83811015611abe578181015183820152602001611aa6565b83811115610f355750506000910152565b6000611ad9825190565b808452602084019350611af0818560208601611aa3565b611af981611642565b9093019392505050565b602080825281016107e18184611acf565b6000611b22611757846116ab565b83815290506020808201908402830185811115611b4157611b41600080fd5b835b818110156118775780611b5688826116f6565b84525060209283019201611b43565b600082601f830112611b7957611b79600080fd5b8135610b41848260208601611b14565b600060408284031215611b9e57611b9e600080fd5b611ba8604061168f565b905081356001600160401b03811115611bc357611bc3600080fd5b611bcf84828501611b65565b82525060206117fe84848301611707565b600060608284031215611bf557611bf5600080fd5b611bff606061168f565b905081356001600160401b03811115611c1a57611c1a600080fd5b61197784828501611b89565b600060208284031215611c3b57611c3b600080fd5b81356001600160401b03811115611c5457611c54600080fd5b610b4184828501611be0565b60008060408385031215611c7657611c76600080fd5b6000611c8285856116f6565b9250506020611c9385828601611707565b9150509250929050565b801515611a8f565b602081016106308284611c9d565b600060208284031215611cc857611cc8600080fd5b81356001600160401b03811115611ce157611ce1600080fd5b610b4184828501611b89565b600060808284031215611d0257611d02600080fd5b611d0c608061168f565b90506000611d1a84846116f6565b8252506020611d2b84848301611707565b6020830152506040611d3f84828501611707565b60408301525060608201356001600160401b03811115611d6157611d61600080fd5b61192584828501611782565b600060408284031215611d8257611d82600080fd5b611d8c604061168f565b905081356001600160401b03811115611da757611da7600080fd5b611db384828501611ced565b82525060208201356001600160401b03811115611dd257611dd2600080fd5b6117fe84828501611a2f565b6000611dec611757846116ab565b83815290506020808201908402830185811115611e0b57611e0b600080fd5b835b818110156118775780356001600160401b03811115611e2e57611e2e600080fd5b808601611e3b8982611d6d565b8552505060209283019201611e0d565b600082601f830112611e5f57611e5f600080fd5b8135610b41848260208601611dde565b600060408284031215611e8457611e84600080fd5b611e8e604061168f565b90506000611bcf8484611707565b600060608284031215611eb157611eb1600080fd5b611ebb604061168f565b905081356001600160401b03811115611ed657611ed6600080fd5b611ee284828501611e4b565b82525060206117fe84848301611e6f565b600060608284031215611f0857611f08600080fd5b611f12606061168f565b905081356001600160401b03811115611f2d57611f2d600080fd5b61197784828501611e9c565b600060208284031215611f4e57611f4e600080fd5b81356001600160401b03811115611f6757611f67600080fd5b610b4184828501611ef3565b611a8f816116ce565b602081016106308284611f73565b600080600060608486031215611fa257611fa2600080fd5b6000611fae86866116f6565b9350506020611fbf868287016116f6565b9250506040611fd086828701611707565b9150509250925092565b600060208284031215611fef57611fef600080fd5b81356001600160401b0381111561200857612008600080fd5b610b4184828501611d6d565b60ff8116611a8f565b602081016106308284612014565b60006080828403121561204057612040600080fd5b61204a608061168f565b905081356001600160401b0381111561206557612065600080fd5b61207184828501611782565b82525060208201356001600160401b0381111561209057612090600080fd5b61209c84828501611782565b60208301525060406120b084828501611707565b6040830152506060611925848285016116f6565b6000602082840312156120d9576120d9600080fd5b81356001600160401b038111156120f2576120f2600080fd5b610b418482850161202b565b60006020828403121561211357612113600080fd5b81356001600160401b0381111561212c5761212c600080fd5b610b41848285016118a5565b60006020828403121561214d5761214d600080fd5b81356001600160401b0381111561216657612166600080fd5b610b4184828501611931565b60006020828403121561218757612187600080fd5b6000610b4184846116f6565b6000604082840312156121a8576121a8600080fd5b6000610b418484611e6f565b60008083601f8401126121c9576121c9600080fd5b5081356001600160401b038111156121e3576121e3600080fd5b6020830191508360208202830111156113a2576113a2600080fd5b6000806020838503121561221457612214600080fd5b82356001600160401b0381111561222d5761222d600080fd5b612239858286016121b4565b92509250509250929050565b60006020828403121561225a5761225a600080fd5b81356001600160401b0381111561227357612273600080fd5b610b4184828501611b65565b60006020828403121561229457612294600080fd5b81356001600160401b038111156122ad576122ad600080fd5b610b4184828501611ced565b6000602082840312156122ce576122ce600080fd5b81356001600160401b038111156122e7576122e7600080fd5b610b4184828501611e9c565b6000806000806080858703121561230c5761230c600080fd5b84356001600160401b0381111561232557612325600080fd5b61233187828801611782565b94505060208501356001600160401b0381111561235057612350600080fd5b61235c87828801611782565b935050604061236d87828801611707565b925050606061237e878288016116f6565b91505092959194509250565b60006060828403121561239f5761239f600080fd5b50919050565b6000602082840312156123ba576123ba600080fd5b81356001600160401b038111156123d3576123d3600080fd5b610b418482850161238a565b6000602082840312156123f4576123f4600080fd5b81356001600160401b0381111561240d5761240d600080fd5b610b41848285016117a6565b6000806040838503121561242f5761242f600080fd5b600061243b85856116f6565b9250506020611c93858286016116f6565b60006020828403121561246157612461600080fd5b81356001600160401b0381111561247a5761247a600080fd5b610b4184828501611e4b565b60006020828403121561249b5761249b600080fd5b81356001600160401b038111156124b4576124b4600080fd5b610b4184828501611881565b634e487b7160e01b600052603260045260246000fd5b60006124e0825190565b6124ee818560208601611aa3565b9290920192915050565b600061250482856124d6565b9150612511828480611a8f565b5060200192915050565b634e487b7160e01b600052601160045260246000fd5b600060001982036125445761254461251b565b5060010190565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061257557607f821691505b60208210810361239f5761239f61254b565b608081016125958287611a8d565b6125a26020830186611a8d565b6125af6040830185611a8d565b6106f06060830184611f73565b606081016125ca8286611a8d565b6125d76020830185611a8d565b610b416040830184611a8d565b61190160f01b815260020160006125fc828580611a8f565b602082019150612511828480611a8f565b6040810161261b8285611a8d565b8181036020830152610b418184611acf565b6001600160e01b031981166116e8565b80516106308161262d565b60006020828403121561265d5761265d600080fd5b6000610b41848461263d565b6011815260006020820170494e56414c49445f5349474e415455524560781b815291505b5060200190565b6020808252810161063081612669565b600082198211156126b7576126b761251b565b500190565b60a081016126ca8288611a8d565b6126d76020830187611a8d565b6126e46040830186611a8d565b6126f16060830185611a8d565b6126fe6080830184611f73565b9695505050505050565b60a081016127168288611a8d565b6127236020830187611f73565b6127306040830186611a8d565b61273d6060830185611a8d565b6126fe6080830184611a8d565b60006127568383611f73565b505060200190565b6000612768825190565b602083018060005b83811015612795578151612784888261274a565b975060208301925050600101612770565b509495945050505050565b60006107e1828461275e565b602581526000602082017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77815264207a65726f60d81b602082015291505b5060400190565b60208082528101610630816127ac565b60006106303683611ef3565b60008235605e193684900301811261282757612827600080fd5b9190910192915050565b6000808335601e193685900301811261284c5761284c600080fd5b8084019250823591506001600160401b0382111561286c5761286c600080fd5b6020928301928202360383131561288557612885600080fd5b509250929050565b6060810161289b8286611a8d565b6125d76020830185611f73565b602481526000602082017f45524332303a20617070726f76652066726f6d20746865207a65726f206164648152637265737360e01b602082015291506127ea565b60208082528101610630816128a8565b602281526000602082017f45524332303a20617070726f766520746f20746865207a65726f206164647265815261737360f01b602082015291506127ea565b60208082528101610630816128f9565b600060ff8216915060ff831692508260ff038211156126b7576126b761251b565b608081016129778287611a8d565b6129846020830186612014565b6129916040830185611a8d565b6106f06060830184611a8d565b601d81526000602082017f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000008152915061268d565b602080825281016106308161299e565b602581526000602082017f45524332303a207472616e736665722066726f6d20746865207a65726f206164815264647265737360d81b602082015291506127ea565b60208082528101610630816129e2565b602381526000602082017f45524332303a207472616e7366657220746f20746865207a65726f206164647281526265737360e81b602082015291506127ea565b6020808252810161063081612a34565b602681526000602082017f45524332303a207472616e7366657220616d6f756e7420657863656564732062815265616c616e636560d01b602082015291506127ea565b6020808252810161063081612a84565b60008235603e193684900301811261282757612827600080fd5b60008235607e193684900301811261282757612827600080fd5b6000808335601e1936859003018112612b2657612b26600080fd5b8084019250823591506001600160401b03821115612b4657612b46600080fd5b60208301925060018202360383131561288557612885600080fd5b60006107e13684846119c2565b60006106303683611ced565b602981526000602082017f44656c6567617461626c65436f72653a696e76616c69642d696e766f636174698152681bdb8b5d185c99d95d60ba1b602082015291506127ea565b6020808252810161063081612b7a565b602181526000602082017f44656c6567617461626c65436f72653a3a657865637574696f6e2d6661696c658152601960fa1b602082015291506127ea565b6020808252810161063081612bd0565b602381526000602082017f44656c6567617461626c65436f72653a6e6f6e6365322d6f75742d6f662d6f728152623232b960e91b602082015291506127ea565b6020808252810161063081612c1e565b602281526000602082017f43616e44656c65676174653a696e76616c69642d726f6f742d617574686f7269815261747960f01b602082015291506127ea565b6020808252810161063081612c6e565b602581526000602082017f43616e44656c65676174653a696e76616c69642d64656c65676174696f6e2d7381526434b3b732b960d91b602082015291506127ea565b6020808252810161063081612cbd565b602d81526000602082017f43616e44656c65676174653a696e76616c69642d617574686f726974792d646581526c6c65676174696f6e2d6c696e6b60981b602082015291506127ea565b6020808252810161063081612d0f565b60006106308260601b90565b600061063082612d69565b611a8f612d8c826116ce565b612d75565b6000612d9d82856124d6565b9150612da98284612d80565b5060140192915050565b60006107e182846124d6565b60408082528101612dd08185611acf565b90506107e16020830184611f73565b80516000906060840190612df38582611f73565b506020830151612e066020860182611a8d565b50604083015184820360408601526106f08282611acf565b60608082528101612e2f8186611acf565b90508181036020830152612e438185612ddf565b9050610b416040830184611a8d565b8015156116e8565b805161063081612e52565b600060208284031215612e7a57612e7a600080fd5b6000610b418484612e5a565b601b81526000602082017a10d85b91195b1959d85d194e98d85d99585d0b5c995a9958dd1959602a1b8152915061268d565b6020808252810161063081612e86565b61ffff16600061fffe1982016125445761254461251b565b6000612eee61175784611712565b905082815260208101848484011115612f0957612f09600080fd5b6111e6848285611aa3565b600082601f830112612f2857612f28600080fd5b8151610b41848260208601612ee0565b600060208284031215612f4d57612f4d600080fd5b81516001600160401b03811115612f6657612f66600080fd5b610b4184828501612f1456fe8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400fa2646970667358221220e86319e9f4749ab9c2cabe1d58e36d39490713b2c41498926b96bf365e1343ee64736f6c634300080f0033'

type ERC20DelegatableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: ERC20DelegatableConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class ERC20Delegatable__factory extends ContractFactory {
  constructor(...args: ERC20DelegatableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
    this.contractName = 'ERC20Delegatable'
  }

  deploy(
    name: string,
    symbol: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ERC20Delegatable> {
    return super.deploy(
      name,
      symbol,
      amount,
      overrides || {},
    ) as Promise<ERC20Delegatable>
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, amount, overrides || {})
  }
  attach(address: string): ERC20Delegatable {
    return super.attach(address) as ERC20Delegatable
  }
  connect(signer: Signer): ERC20Delegatable__factory {
    return super.connect(signer) as ERC20Delegatable__factory
  }
  static readonly contractName: 'ERC20Delegatable'
  public readonly contractName: 'ERC20Delegatable'
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ERC20DelegatableInterface {
    return new utils.Interface(_abi) as ERC20DelegatableInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ERC20Delegatable {
    return new Contract(address, _abi, signerOrProvider) as ERC20Delegatable
  }
}
