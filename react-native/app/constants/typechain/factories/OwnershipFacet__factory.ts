/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import '@ethersproject/shims'
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { OwnershipFacet, OwnershipFacetInterface } from '../OwnershipFacet'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: 'owner_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b506102cf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b14610059575b600080fd5b61004361006e565b60405161005091906101fd565b60405180910390f35b61006c61006736600461022a565b61007d565b005b6000610078610091565b905090565b6100856100ad565b61008e816100fb565b50565b600061009b61015b565b600401546001600160a01b0316919050565b6100b561015b565b600401546001600160a01b03166100ca61017f565b6001600160a01b0316146100f95760405162461bcd60e51b81526004016100f090610253565b60405180910390fd5b565b600061010561015b565b6004810180546001600160a01b038581166001600160a01b031983168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b60003033036101d557600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506101d89050565b50335b90565b60006001600160a01b0382165b92915050565b6101f7816101db565b82525050565b602081016101e882846101ee565b610214816101db565b811461008e57600080fd5b80356101e88161020b565b60006020828403121561023f5761023f600080fd5b600061024b848461021f565b949350505050565b602080825281016101e881602281527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60208201526132b960f11b60408201526060019056fea2646970667358221220ecef0f2d9c2e2cbf873deac2c42988deb6170db58b491efc29d300a5d294bfe364736f6c63430008120033'

type OwnershipFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: OwnershipFacetConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class OwnershipFacet__factory extends ContractFactory {
  constructor(...args: OwnershipFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
    this.contractName = 'OwnershipFacet'
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<OwnershipFacet> {
    return super.deploy(overrides || {}) as Promise<OwnershipFacet>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): OwnershipFacet {
    return super.attach(address) as OwnershipFacet
  }
  connect(signer: Signer): OwnershipFacet__factory {
    return super.connect(signer) as OwnershipFacet__factory
  }
  static readonly contractName: 'OwnershipFacet'
  public readonly contractName: 'OwnershipFacet'
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): OwnershipFacetInterface {
    return new utils.Interface(_abi) as OwnershipFacetInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): OwnershipFacet {
    return new Contract(address, _abi, signerOrProvider) as OwnershipFacet
  }
}
