/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import '@ethersproject/shims'
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type {
  AllowedMethodsEnforcer,
  AllowedMethodsEnforcerInterface,
} from '../AllowedMethodsEnforcer'

const _abi = [
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'terms',
        type: 'bytes',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct Intent',
        name: 'transaction',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'delegationHash',
        type: 'bytes32',
      },
    ],
    name: 'enforceCaveat',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b50610398806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635068de4c14610030575b600080fd5b61004361003e366004610188565b610059565b6040516100509190610210565b60405180910390f35b600080610069604085018561021e565b6100789160049160009161027c565b610081916102ac565b905060005b858110156100e957600087828861009e8260046102fd565b926100ab9392919061027c565b6100b4916102ac565b90506001600160e01b0319808416908216036100d6576001935050505061010b565b506100e26004826102fd565b9050610086565b5060405162461bcd60e51b815260040161010290610315565b60405180910390fd5b949350505050565b60008083601f84011261012857610128600080fd5b5081356001600160401b0381111561014257610142600080fd5b60208301915083600182028301111561015d5761015d600080fd5b9250929050565b60006060828403121561017957610179600080fd5b50919050565b80355b92915050565b600080600080606085870312156101a1576101a1600080fd5b84356001600160401b038111156101ba576101ba600080fd5b6101c687828801610113565b945094505060208501356001600160401b038111156101e7576101e7600080fd5b6101f387828801610164565b92505060406102048782880161017f565b91505092959194509250565b811515815260208101610182565b6000808335601e193685900301811261023957610239600080fd5b8084019250823591506001600160401b0382111561025957610259600080fd5b60208301925060018202360383131561027457610274600080fd5b509250929050565b6000808585111561028f5761028f600080fd5b8386111561029f5761029f600080fd5b5050820193919092039150565b80356001600160e01b031916828260048210156102df576102da6001600160e01b0319836004036008021b90565b831692505b505092915050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610310576103106102e7565b500190565b6020808252810161018281602981527f416c6c6f7765644d6574686f6473456e666f726365723a6d6574686f642d6e6f6020820152681d0b585b1b1bddd95960ba1b60408201526060019056fea26469706673582212201f3d3713ad767826d5e8f3652ad941616da7474749147a7048267dc7e9da362e64736f6c634300080f0033'

type AllowedMethodsEnforcerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: AllowedMethodsEnforcerConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class AllowedMethodsEnforcer__factory extends ContractFactory {
  constructor(...args: AllowedMethodsEnforcerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
    this.contractName = 'AllowedMethodsEnforcer'
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<AllowedMethodsEnforcer> {
    return super.deploy(overrides || {}) as Promise<AllowedMethodsEnforcer>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): AllowedMethodsEnforcer {
    return super.attach(address) as AllowedMethodsEnforcer
  }
  connect(signer: Signer): AllowedMethodsEnforcer__factory {
    return super.connect(signer) as AllowedMethodsEnforcer__factory
  }
  static readonly contractName: 'AllowedMethodsEnforcer'
  public readonly contractName: 'AllowedMethodsEnforcer'
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): AllowedMethodsEnforcerInterface {
    return new utils.Interface(_abi) as AllowedMethodsEnforcerInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): AllowedMethodsEnforcer {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as AllowedMethodsEnforcer
  }
}
