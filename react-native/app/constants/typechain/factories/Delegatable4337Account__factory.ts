/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type {
  Delegatable4337Account,
  Delegatable4337AccountInterface,
} from '../Delegatable4337Account'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IEntryPoint',
        name: 'anEntryPoint',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: '_owners',
        type: 'address[]',
      },
      {
        internalType: 'uint8',
        name: '_threshold',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'addDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'signatureField',
        type: 'bytes',
      },
    ],
    name: 'decodeAgnosticSignatures',
    outputs: [
      {
        components: [
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'contractAddress',
            type: 'address',
          },
        ],
        internalType: 'struct ContractAgnosticSignature[]',
        name: 'payload',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'callData',
        type: 'bytes',
      },
    ],
    name: 'decodeCallData',
    outputs: [
      {
        internalType: 'bytes4',
        name: 'funcSig',
        type: 'bytes4',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'encodedDelegationArray',
        type: 'bytes',
      },
    ],
    name: 'decodeDelegationArray',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'delegate',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'authority',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'enforcer',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes',
                    name: 'terms',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Caveat[]',
                name: 'caveats',
                type: 'tuple[]',
              },
              {
                internalType: 'uint256',
                name: 'salt',
                type: 'uint256',
              },
            ],
            internalType: 'struct Delegation',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedDelegation[]',
        name: 'delegationArray',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'signatureField',
        type: 'bytes',
      },
    ],
    name: 'decodeSignature',
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'delegate',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'authority',
                    type: 'bytes32',
                  },
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'enforcer',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes',
                        name: 'terms',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Caveat[]',
                    name: 'caveats',
                    type: 'tuple[]',
                  },
                  {
                    internalType: 'uint256',
                    name: 'salt',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Delegation',
                name: 'message',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'signer',
                type: 'address',
              },
            ],
            internalType: 'struct SignedDelegation[]',
            name: 'delegations',
            type: 'tuple[]',
          },
          {
            components: [
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'contractAddress',
                type: 'address',
              },
            ],
            internalType: 'struct ContractAgnosticSignature[]',
            name: 'signatures',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct SignaturePayload',
        name: 'payload',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'domainHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'delegate',
            type: 'address',
          },
          {
            internalType: 'bytes32',
            name: 'authority',
            type: 'bytes32',
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'enforcer',
                type: 'address',
              },
              {
                internalType: 'bytes',
                name: 'terms',
                type: 'bytes',
              },
            ],
            internalType: 'struct Caveat[]',
            name: 'caveats',
            type: 'tuple[]',
          },
          {
            internalType: 'uint256',
            name: 'salt',
            type: 'uint256',
          },
        ],
        internalType: 'struct Delegation[]',
        name: 'delegationArray',
        type: 'tuple[]',
      },
    ],
    name: 'encodeDelegationArray',
    outputs: [
      {
        internalType: 'bytes',
        name: 'encodedDelegationArray',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'entryPoint',
    outputs: [
      {
        internalType: 'contract IEntryPoint',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_dest',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_func',
        type: 'bytes',
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'delegate',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'authority',
                    type: 'bytes32',
                  },
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'enforcer',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes',
                        name: 'terms',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Caveat[]',
                    name: 'caveats',
                    type: 'tuple[]',
                  },
                  {
                    internalType: 'uint256',
                    name: 'salt',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Delegation',
                name: 'message',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'signer',
                type: 'address',
              },
            ],
            internalType: 'struct SignedDelegation[]',
            name: 'delegations',
            type: 'tuple[]',
          },
          {
            components: [
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'contractAddress',
                type: 'address',
              },
            ],
            internalType: 'struct ContractAgnosticSignature[]',
            name: 'signatures',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct SignaturePayload',
        name: '_signaturePayload',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'queue',
            type: 'uint256',
          },
        ],
        internalType: 'struct ReplayProtection',
        name: '_protection',
        type: 'tuple',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_input',
        type: 'address[]',
      },
    ],
    name: 'getAddressArrayPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'to',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'gasLimit',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'value',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bytes',
                    name: 'data',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Transaction',
                name: 'transaction',
                type: 'tuple',
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'delegate',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes32',
                        name: 'authority',
                        type: 'bytes32',
                      },
                      {
                        components: [
                          {
                            internalType: 'address',
                            name: 'enforcer',
                            type: 'address',
                          },
                          {
                            internalType: 'bytes',
                            name: 'terms',
                            type: 'bytes',
                          },
                        ],
                        internalType: 'struct Caveat[]',
                        name: 'caveats',
                        type: 'tuple[]',
                      },
                      {
                        internalType: 'uint256',
                        name: 'salt',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct Delegation',
                    name: 'message',
                    type: 'tuple',
                  },
                  {
                    internalType: 'bytes',
                    name: 'signature',
                    type: 'bytes',
                  },
                  {
                    internalType: 'address',
                    name: 'signer',
                    type: 'address',
                  },
                ],
                internalType: 'struct SignedDelegation[]',
                name: 'authority',
                type: 'tuple[]',
              },
            ],
            internalType: 'struct Invocation[]',
            name: 'invocations',
            type: 'tuple[]',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'nonce',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'queue',
                type: 'uint256',
              },
            ],
            internalType: 'struct ReplayProtection',
            name: 'replayProtection',
            type: 'tuple',
          },
        ],
        internalType: 'struct Batch',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getBatchPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'enforcer',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'terms',
            type: 'bytes',
          },
        ],
        internalType: 'struct Caveat[]',
        name: '_input',
        type: 'tuple[]',
      },
    ],
    name: 'getCaveatArrayPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'enforcer',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'terms',
            type: 'bytes',
          },
        ],
        internalType: 'struct Caveat',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getCaveatPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'delegate',
            type: 'address',
          },
          {
            internalType: 'bytes32',
            name: 'authority',
            type: 'bytes32',
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'enforcer',
                type: 'address',
              },
              {
                internalType: 'bytes',
                name: 'terms',
                type: 'bytes',
              },
            ],
            internalType: 'struct Caveat[]',
            name: 'caveats',
            type: 'tuple[]',
          },
          {
            internalType: 'uint256',
            name: 'salt',
            type: 'uint256',
          },
        ],
        internalType: 'struct Delegation',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getDelegationPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_dest',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_func',
        type: 'bytes',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'queue',
            type: 'uint256',
          },
        ],
        internalType: 'struct ReplayProtection',
        name: '_protection',
        type: 'tuple',
      },
    ],
    name: 'getDelegatorHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getDomainHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'contractName',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'version',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'verifyingContract',
        type: 'address',
      },
    ],
    name: 'getEIP712DomainHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'name',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'version',
            type: 'string',
          },
          {
            internalType: 'uint256',
            name: 'chainId',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'verifyingContract',
            type: 'address',
          },
        ],
        internalType: 'struct EIP712Domain',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getEip712DomainPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'to',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'gasLimit',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct Transaction',
            name: 'transaction',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'delegate',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'authority',
                    type: 'bytes32',
                  },
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'enforcer',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes',
                        name: 'terms',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Caveat[]',
                    name: 'caveats',
                    type: 'tuple[]',
                  },
                  {
                    internalType: 'uint256',
                    name: 'salt',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Delegation',
                name: 'message',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'signer',
                type: 'address',
              },
            ],
            internalType: 'struct SignedDelegation[]',
            name: 'authority',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Invocation[]',
        name: '_input',
        type: 'tuple[]',
      },
    ],
    name: 'getInvocationArrayPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'to',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'gasLimit',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct Transaction',
            name: 'transaction',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'delegate',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'authority',
                    type: 'bytes32',
                  },
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'enforcer',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes',
                        name: 'terms',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Caveat[]',
                    name: 'caveats',
                    type: 'tuple[]',
                  },
                  {
                    internalType: 'uint256',
                    name: 'salt',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Delegation',
                name: 'message',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'signer',
                type: 'address',
              },
            ],
            internalType: 'struct SignedDelegation[]',
            name: 'authority',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Invocation',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getInvocationPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'intendedSender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'queue',
        type: 'uint256',
      },
    ],
    name: 'getMultiNonce',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'signers',
            type: 'address[]',
          },
          {
            internalType: 'uint256',
            name: 'threshold',
            type: 'uint256',
          },
        ],
        internalType: 'struct MultisigParams',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getMultisigparamsPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getNonce',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getOwners',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'queue',
            type: 'uint256',
          },
        ],
        internalType: 'struct ReplayProtection',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getReplayprotectionPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'to',
                        type: 'address',
                      },
                      {
                        internalType: 'uint256',
                        name: 'gasLimit',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'value',
                        type: 'uint256',
                      },
                      {
                        internalType: 'bytes',
                        name: 'data',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Transaction',
                    name: 'transaction',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: 'address',
                            name: 'delegate',
                            type: 'address',
                          },
                          {
                            internalType: 'bytes32',
                            name: 'authority',
                            type: 'bytes32',
                          },
                          {
                            components: [
                              {
                                internalType: 'address',
                                name: 'enforcer',
                                type: 'address',
                              },
                              {
                                internalType: 'bytes',
                                name: 'terms',
                                type: 'bytes',
                              },
                            ],
                            internalType: 'struct Caveat[]',
                            name: 'caveats',
                            type: 'tuple[]',
                          },
                          {
                            internalType: 'uint256',
                            name: 'salt',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct Delegation',
                        name: 'message',
                        type: 'tuple',
                      },
                      {
                        internalType: 'bytes',
                        name: 'signature',
                        type: 'bytes',
                      },
                      {
                        internalType: 'address',
                        name: 'signer',
                        type: 'address',
                      },
                    ],
                    internalType: 'struct SignedDelegation[]',
                    name: 'authority',
                    type: 'tuple[]',
                  },
                ],
                internalType: 'struct Invocation[]',
                name: 'invocations',
                type: 'tuple[]',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'nonce',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'queue',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ReplayProtection',
                name: 'replayProtection',
                type: 'tuple',
              },
            ],
            internalType: 'struct Batch',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedBatch',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getSignedbatchPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'delegate',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'authority',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'enforcer',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes',
                    name: 'terms',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Caveat[]',
                name: 'caveats',
                type: 'tuple[]',
              },
              {
                internalType: 'uint256',
                name: 'salt',
                type: 'uint256',
              },
            ],
            internalType: 'struct Delegation',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedDelegation[]',
        name: '_input',
        type: 'tuple[]',
      },
    ],
    name: 'getSigneddelegationArrayPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'delegate',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'authority',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'enforcer',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes',
                    name: 'terms',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Caveat[]',
                name: 'caveats',
                type: 'tuple[]',
              },
              {
                internalType: 'uint256',
                name: 'salt',
                type: 'uint256',
              },
            ],
            internalType: 'struct Delegation',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedDelegation',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getSigneddelegationPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address[]',
                name: 'signers',
                type: 'address[]',
              },
              {
                internalType: 'uint256',
                name: 'threshold',
                type: 'uint256',
              },
            ],
            internalType: 'struct MultisigParams',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedMultisigParams',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getSignedmultisigparamsPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'gasLimit',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct Transaction',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getTransactionPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'isOwner',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_hash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_signatures',
        type: 'bytes',
      },
    ],
    name: 'isValidSignature',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'onERC1155BatchReceived',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'onERC1155Received',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'onERC721Received',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'owners',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'threshold',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'tokensReceived',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_oldSigner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_newSigner',
        type: 'address',
      },
    ],
    name: 'updateSignerAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'signers',
            type: 'address[]',
          },
          {
            internalType: 'uint256',
            name: 'threshold',
            type: 'uint256',
          },
        ],
        internalType: 'struct MultisigParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'updateSigners',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'sender',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'initCode',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'callData',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'callGasLimit',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'verificationGasLimit',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'preVerificationGas',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxFeePerGas',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxPriorityFeePerGas',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'paymasterAndData',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
        ],
        internalType: 'struct UserOperation',
        name: 'userOp',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'userOpHash',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'missingAccountFunds',
        type: 'uint256',
      },
    ],
    name: 'validateUserOp',
    outputs: [
      {
        internalType: 'uint256',
        name: 'validationData',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'to',
                        type: 'address',
                      },
                      {
                        internalType: 'uint256',
                        name: 'gasLimit',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'value',
                        type: 'uint256',
                      },
                      {
                        internalType: 'bytes',
                        name: 'data',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Transaction',
                    name: 'transaction',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: 'address',
                            name: 'delegate',
                            type: 'address',
                          },
                          {
                            internalType: 'bytes32',
                            name: 'authority',
                            type: 'bytes32',
                          },
                          {
                            components: [
                              {
                                internalType: 'address',
                                name: 'enforcer',
                                type: 'address',
                              },
                              {
                                internalType: 'bytes',
                                name: 'terms',
                                type: 'bytes',
                              },
                            ],
                            internalType: 'struct Caveat[]',
                            name: 'caveats',
                            type: 'tuple[]',
                          },
                          {
                            internalType: 'uint256',
                            name: 'salt',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct Delegation',
                        name: 'message',
                        type: 'tuple',
                      },
                      {
                        internalType: 'bytes',
                        name: 'signature',
                        type: 'bytes',
                      },
                      {
                        internalType: 'address',
                        name: 'signer',
                        type: 'address',
                      },
                    ],
                    internalType: 'struct SignedDelegation[]',
                    name: 'authority',
                    type: 'tuple[]',
                  },
                ],
                internalType: 'struct Invocation[]',
                name: 'invocations',
                type: 'tuple[]',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'nonce',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'queue',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ReplayProtection',
                name: 'replayProtection',
                type: 'tuple',
              },
            ],
            internalType: 'struct Batch',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedBatch',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'verifySignedBatch',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'delegate',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'authority',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'enforcer',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes',
                    name: 'terms',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Caveat[]',
                name: 'caveats',
                type: 'tuple[]',
              },
              {
                internalType: 'uint256',
                name: 'salt',
                type: 'uint256',
              },
            ],
            internalType: 'struct Delegation',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedDelegation',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'verifySignedDelegation',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address[]',
                name: 'signers',
                type: 'address[]',
              },
              {
                internalType: 'uint256',
                name: 'threshold',
                type: 'uint256',
              },
            ],
            internalType: 'struct MultisigParams',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedMultisigParams',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'verifySignedMultisigParams',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
]

const _bytecode =
  '0x60c06040523480156200001157600080fd5b5060405162005a8738038062005a87833981016040819052620000349162000420565b81816000825111620000635760405162461bcd60e51b81526004016200005a90620004df565b60405180910390fd5b60008160ff161180156200007b575081518160ff1611155b6200009a5760405162461bcd60e51b81526004016200005a9062000530565b60005b825181101562000108576001600080858481518110620000c157620000c162000542565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000ff816200056e565b9150506200009d565b5081516200011e90600190602085019062000205565b506002805460ff191660ff92909216919091179055506001600160a01b03831660a052604080518082018252600d81526c14db585c9d081058d8dbdd5b9d609a1b602080830191909152825180840190935260018352603160f81b908301526200018a91463062000197565b60805250620005f4915050565b6000807f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f868051906020012086805190602001208686604051602001620001e39594939291906200059e565b60408051808303601f1901815291905280516020909101209695505050505050565b8280548282559060005260206000209081019282156200025d579160200282015b828111156200025d57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000226565b506200026b9291506200026f565b5090565b5b808211156200026b576000815560010162000270565b60006001600160a01b0382165b92915050565b6000620002938262000286565b620002b18162000299565b8114620002bd57600080fd5b50565b80516200029381620002a6565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b03821117156200030b576200030b620002cd565b6040525050565b60006200031e60405190565b90506200032c8282620002e3565b919050565b60006001600160401b038211156200034d576200034d620002cd565b5060209081020190565b620002b18162000286565b8051620002938162000357565b600062000386620003808462000331565b62000312565b83815290506020808201908402830185811115620003a757620003a7600080fd5b835b81811015620003cf5780620003bf888262000362565b84525060209283019201620003a9565b5050509392505050565b600082601f830112620003ef57620003ef600080fd5b8151620004018482602086016200036f565b949350505050565b60ff8116620002b1565b8051620002938162000409565b6000806000606084860312156200043a576200043a600080fd5b6000620004488686620002c0565b93505060208401516001600160401b03811115620004695762000469600080fd5b6200047786828701620003d9565b92505060406200048a8682870162000413565b9150509250925092565b602b81526000602082017f53696d706c654d756c74697369673a204174206c65617374206f6e65206f776e81526a195c881c995c5d5a5c995960aa1b602082015291505b5060400190565b60208082528101620002938162000494565b602181526000602082017f53696d706c654d756c74697369673a20496e76616c6964207468726573686f6c8152601960fa1b60208201529150620004d8565b602080825281016200029381620004f1565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019820362000584576200058462000558565b5060010190565b805b82525050565b6200058d8162000286565b60a08101620005ae82886200058b565b620005bd60208301876200058b565b620005cc60408301866200058b565b620005db60608301856200058b565b620005ea608083018462000593565b9695505050505050565b60805160a0516154666200062160003960006118580152600081816107c9015261156201526154666000f3fe6080604052600436106102105760003560e01c806223de291461021c57806301ffc9a714610243578063025e7c2714610279578063037dd6ff146102a657806307cae44d146102d35780630deeb600146102f3578063134e3d961461031357806314239de714610333578063150b7a02146103535780631626ba7e1461038c5780632b163c2b146103ac5780632f54bf6e146103cc5780633a871cdd146103fc5780633c359f7b1461041c5780633c9f21a01461044957806342cde4e81461046957806346e0f5a8146104905780634a58db19146104b057806359b989ca146104b85780636eb8aaf4146104d857806383ebb771146104f85780638d4252c01461050d5780638dca12551461052d5780639022631a1461055d57806393574eed1461058a5780639d1be925146105aa5780639dfae312146105d7578063a0e67e2b146105f7578063a2c6cb0214610619578063b0d691fe14610639578063b12b715f1461065b578063bbd758171461069e578063bc197c81146106be578063bdcc1179146106ed578063c399ec881461070d578063c6253e3c14610722578063d087d28814610742578063d327c1eb14610757578063dbefc91f14610777578063dbf1220014610797578063dfe86ac5146107b7578063e315644d146107eb578063f23a6e611461080b578063f4fbfd2f14610838578063fb293bd514610858578063fb9b38be1461087857600080fd5b3661021757005b600080fd5b34801561022857600080fd5b50610241610237366004612952565b5050505050505050565b005b34801561024f57600080fd5b5061026361025e366004612a3b565b6108a5565b6040516102709190612a66565b60405180910390f35b34801561028557600080fd5b50610299610294366004612a74565b6108f7565b6040516102709190612a9e565b3480156102b257600080fd5b506102c66102c1366004612e81565b610921565b6040516102709190612ec1565b3480156102df57600080fd5b506102c66102ee366004612fe1565b610998565b3480156102ff57600080fd5b506102c661030e36600461301b565b610a08565b34801561031f57600080fd5b5061024161032e366004613070565b610a4e565b34801561033f57600080fd5b5061029961034e36600461336b565b610d38565b34801561035f57600080fd5b5061037f61036e3660046133a5565b630a85bd0160e11b95945050505050565b6040516102709190613431565b34801561039857600080fd5b5061037f6103a736600461343f565b610e6b565b3480156103b857600080fd5b506102c66103c736600461349a565b6111cc565b3480156103d857600080fd5b506102636103e73660046134d4565b60006020819052908152604090205460ff1681565b34801561040857600080fd5b506102c661041736600461350b565b61121c565b34801561042857600080fd5b5061043c610437366004613574565b611232565b60405161027091906136ba565b34801561045557600080fd5b506102c6610464366004613764565b611240565b34801561047557600080fd5b506002546104839060ff1681565b60405161027091906137a7565b34801561049c57600080fd5b506102416104ab3660046137b5565b611288565b610241611494565b3480156104c457600080fd5b506102c66104d33660046137ef565b6114fc565b3480156104e457600080fd5b506102996104f3366004613829565b611550565b34801561050457600080fd5b506102c6611560565b34801561051957600080fd5b506102c6610528366004613863565b611584565b34801561053957600080fd5b5061054d610548366004613574565b61159d565b60405161027094939291906138e6565b34801561056957600080fd5b5061057d6105783660046139b1565b6116a4565b60405161027091906139eb565b34801561059657600080fd5b506102c66105a5366004613829565b6116cd565b3480156105b657600080fd5b506105ca6105c53660046139fc565b6116fe565b6040516102709190613bc7565b3480156105e357600080fd5b506102c66105f2366004613bd8565b611784565b34801561060357600080fd5b5061060c6117c4565b6040516102709190613c56565b34801561062557600080fd5b506102c6610634366004613c67565b611826565b34801561064557600080fd5b5061064e611856565b6040516102709190613cd6565b34801561066757600080fd5b506102c6610676366004613ce4565b6001600160a01b03919091166000908152600360209081526040808320938352929052205490565b3480156106aa57600080fd5b506102c66106b9366004613d21565b61187a565b3480156106ca57600080fd5b5061037f6106d9366004613da5565b63bc197c8160e01b98975050505050505050565b3480156106f957600080fd5b506102c6610708366004613e5a565b6118cd565b34801561071957600080fd5b506102c661190b565b34801561072e57600080fd5b5061024161073d366004613e94565b611986565b34801561074e57600080fd5b506102c6611b39565b34801561076357600080fd5b506102c6610772366004613ec7565b611b71565b34801561078357600080fd5b50610299610792366004612fe1565b611bcd565b3480156107a357600080fd5b506102c66107b2366004613f5e565b611bdd565b3480156107c357600080fd5b506102c67f000000000000000000000000000000000000000000000000000000000000000081565b3480156107f757600080fd5b506102c6610806366004613f98565b611c24565b34801561081757600080fd5b5061037f610826366004613fd2565b63f23a6e6160e01b9695505050505050565b34801561084457600080fd5b506102c661085336600461336b565b611c8c565b34801561086457600080fd5b506102c6610873366004614067565b611cbd565b34801561088457600080fd5b50610898610893366004613574565b611d25565b6040516102709190614185565b60006001600160e01b03198216630a85bd0160e11b14806108d657506001600160e01b03198216630271189760e51b145b806108f157506001600160e01b031982166301ffc9a760e01b145b92915050565b6001818154811061090757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000606060005b8351811015610989578161095485838151811061094757610947614196565b60200260200101516116cd565b6040516020016109659291906141ce565b6040516020818303038152906040529150808061098190614207565b915050610928565b50805160209091012092915050565b6000807ff562bb2887ad46fa4ed8270ec3eb4c4ddaaa8eac6df6a306f0539ed308b63f336109c98460000151610a08565b60208086015180519082012060408088015190516109e995949301614221565b60408051601f1981840301815291905280516020909101209392505050565b6000807ffdaf74c87f80f0094315fc4e85684a5c59e57ac35e3b5b0dfa85df43b3439b57610a398460000151611826565b6020808601516040516109e994939201614256565b610a56611d45565b610a603082611da0565b610a8160405180606001604052806027815260200161540a60279139611e1e565b60006040518060600160405280886001600160a01b0316815260200187815260200186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250929350309250829150610aed868061427e565b90501115610bae57610b11610b02868061427e565b610b0b916142da565b84611e64565b60408051808201909152601081526f726f6f74417574686f7269747920257360801b6020820152909350909150610b489082611f9e565b610b7d60405180604001604052806013815260200172617070726f76656444656c656761746520257360681b81525083611f9e565b6001600160a01b0381163014610bae5760405162461bcd60e51b8152600401610ba59061432d565b60405180910390fd5b610bd06040518060600160405280602881526020016153c26028913983611f9e565b6000610bdf8a8a8a8a89611584565b9050610c106040518060400160405280600e81526020016d2232b632b3b0ba37b92430b9b41d60911b815250611e1e565b610c1981611fe7565b60006001600160a01b038416631626ba7e83610c3860208b018b61427e565b604051602001610c49929190614479565b6040516020818303038152906040526040518363ffffffff1660e01b8152600401610c7592919061448b565b602060405180830381865afa158015610c92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb691906144b6565b9050630b135d3f60e11b6001600160e01b0319821614610ce85760405162461bcd60e51b8152600401610ba590614515565b610d2b8b8b8b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525089925061202a915050565b5050505050505050505050565b600080610d4883600001516118cd565b90506000610d54611560565b82604051602001610d66929190614525565b60405160208183030381529060405280519060200120905083604001516001600160a01b031660006001600160a01b031603610db5576000610dac8286602001516121e0565b95945050505050565b600084604001516001600160a01b0316631626ba7e8387602001516040518363ffffffff1660e01b8152600401610ded92919061448b565b602060405180830381865afa158015610e0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2e91906144b6565b9050630b135d3f60e11b6001600160e01b0319821614610e605760405162461bcd60e51b8152600401610ba590614579565b505050506040015190565b600080610e788484611232565b9050600081519050610eb4604051806040016040528060128152602001711cda59db985d1d5c9950dbdd5b9d0e88095960721b815250826122a9565b60025460ff16811015610ecd5750600091506111c59050565b6000816001600160401b03811115610ee757610ee7612ab6565b604051908082528060200260200182016040528015610f10578160200160208202803683370190505b5090506000826001600160401b03811115610f2d57610f2d612ab6565b604051908082528060200260200182016040528015610f56578160200160208202803683370190505b5090506000805b848160ff16101561117c576000868260ff1681518110610f7f57610f7f614196565b60200260200101519050610fc460405180604001604052806015815260200174436f6e747261637420616464726573733f3a20257360581b8152508260200151611f9e565b60208101516001600160a01b03161561106057600081602001516001600160a01b0316631626ba7e8d84600001516040518363ffffffff1660e01b815260040161100f92919061448b565b602060405180830381865afa15801561102c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105091906144b6565b98506111c5975050505050505050565b60006110708c83600001516121e0565b90506110a8604051806040016040528060148152602001735265636f7665726564206164647265737320257360601b81525082611f9e565b6001600160a01b0381166110bd57505061116a565b6001600160a01b03811660009081526020819052604090205460ff1680156110ed57506110eb8686836122ee565b155b15611167576111256040518060400160405280601281526020017164696420776520656e74657220686572653f60701b815250611e1e565b61113086868361236c565b8361113a81614589565b60025490955060ff9081169086161090506111675750630b135d3f60e11b97506111c59650505050505050565b50505b8061117481614589565b915050610f5d565b506111bb6040518060400160405280601f81526020017f6469642077652067657420746f2074686520656e643f204e4f5420474f4f4400815250611e1e565b5060009450505050505b9392505050565b6000807f16ce3e7a160ccd1337156522b7b75f86515dce2f84625303c8cb53733473e20e6111fd846000015161187a565b61120a8560200151610921565b6040516020016109e993929190614256565b6000611226611d45565b5060006111c582612455565b60606111c582840184614687565b6000806000805160206153ea833981519152836000015180519060200120846020015180519060200120856040015186606001516040516020016109e99594939291906146c1565b60006112926124b6565b90506112c66040518060400160405280601081526020016f5f6d736753656e64657228293a20257360801b81525082611f9e565b6112f66040518060400160405280600e81526020016d6d73672e73656e6465723a20257360901b81525033611f9e565b306112ff6124b6565b6001600160a01b0316146113255760405162461bcd60e51b8152600401610ba59061474c565b6000611331838061427e565b9050116113505760405162461bcd60e51b8152600401610ba5906147a4565b600082602001351180156113735750611369828061427e565b9050826020013511155b61138f5760405162461bcd60e51b8152600401610ba5906147f2565b60015460005b818110156113f157600080600183815481106113b3576113b3614196565b60009182526020808320909101546001600160a01b031683528201929092526040019020805460ff19169055806113e981614207565b915050611395565b506113fc838061427e565b61140891600191612849565b505060015460005b818110156114765760016000806001848154811061143057611430614196565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790558061146e81614207565b915050611410565b50506002805460ff19166020939093013560ff169290921790915550565b61149c611856565b6001600160a01b031663b760faf934306040518363ffffffff1660e01b81526004016114c89190612a9e565b6000604051808303818588803b1580156114e157600080fd5b505af11580156114f5573d6000803e3d6000fd5b5050505050565b6000807fc868c829d0d249972f3cbb7c51600c4e74dd6ed52ba5192cddc7526c48257a9f836000015184602001516115378660400151611cbd565b86606001516040516020016109e9959493929190614802565b600080610d4883600001516114fc565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006115938686868686612512565b9695505050505050565b6000808060606115ee6115b460246010888a614844565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250612533915050565b925061163b61160160446024888a614844565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250612570915050565b915061164b600460008789614844565b61165491614874565b93506116638560448189614844565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509699959850939650909450505050565b6060816040516020016116b79190614916565b6040516020818303038152906040529050919050565b6000807fd1ffa191aacebaec8a0767b176d64c69a029e83c7bae7f3fdde5f0c5fdaf35036109c984600001516114fc565b60608151600003611770576040805160008082526020820190925290611769565b6040805160e081018252600060608083018281526080840183905260a0840182905260c08401839052835260208301529181019190915281526020019060019003908161171f5790505b5092915050565b818060200190518101906108f19190614c15565b6000807fe8d3d963b33868fb116316bc3fd55e8f49123f30e4418f71e140d54b7cd3b2b9836000015184602001516040516020016109e993929190614256565b6060600180548060200260200160405190810160405280929190818152602001828054801561181c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116117fe575b5050505050905090565b6000816040516020016118399190614c86565b604051602081830303815290604052805190602001209050919050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000807f8e96309e8d7caab0cd12f924b5671b439d8ee99659ea36357e8cc30e7fe322938360000151846020015185604001518660600151805190602001206040516020016109e9959493929190614802565b6000807f6d01ae502c3d43977868cf20f1077c1dc1970131f37d80ed21ecf591e958d8106118fe8460000151611c24565b61120a8560200151611784565b6000611915611856565b6001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016119409190612a9e565b602060405180830381865afa15801561195d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119819190614c92565b905090565b6001600160a01b03821660009081526020819052604090205460ff166119be5760405162461bcd60e51b8152600401610ba590614cfa565b6001600160a01b03811660009081526020819052604090205460ff16156119f75760405162461bcd60e51b8152600401610ba590614d55565b806001600160a01b0316826001600160a01b031603611a285760405162461bcd60e51b8152600401610ba590614dbb565b611a306124b6565b6001600160a01b0316826001600160a01b031614611a605760405162461bcd60e51b8152600401610ba590614e09565b60005b600154811015611afd57826001600160a01b031660018281548110611a8a57611a8a614196565b6000918252602090912001546001600160a01b031603611aeb578160018281548110611ab857611ab8614196565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550611afd565b80611af581614207565b915050611a63565b506001600160a01b03918216600090815260208190526040808220805460ff199081169091559290931681529190912080549091166001179055565b6000611b43611856565b6001600160a01b03166335567e1a3060006040518363ffffffff1660e01b8152600401611940929190614e34565b6000806000805160206153ea833981519152868051906020012086805190602001208686604051602001611ba99594939291906146c1565b60408051601f1981840301815291905280516020909101209150505b949350505050565b600080610d488360000151610a08565b6000807f80ad7e1b04ee6d994a125f4714ca0720908bd80ed16063ec8aee4b88e9253e2d83600001518460200151805190602001206040516020016109e993929190614e4f565b6000606060005b83518110156109895781611c57858381518110611c4a57611c4a614196565b60200260200101516111cc565b604051602001611c689291906141ce565b60405160208183030381529060405291508080611c8490614207565b915050611c2b565b6000807f220f51b2634e2a90b6fb21f89acf38590ea901923e6240ec90bcd0db8314524c6109c984600001516118cd565b6000606060005b83518110156109895781611cf0858381518110611ce357611ce3614196565b6020026020010151611bdd565b604051602001611d019291906141ce565b60405160208183030381529060405291508080611d1d90614207565b915050611cc4565b60408051808201909152606080825260208201526111c582840184614edb565b611d4d611856565b6001600160a01b0316611d5e6124b6565b6001600160a01b03161480611d82575030611d776124b6565b6001600160a01b0316145b611d9e5760405162461bcd60e51b8152600401610ba590614f47565b565b6001600160a01b038216600090815260036020908152604080832082850135808552925290912054823590611dd6906001614f57565b8114611df45760405162461bcd60e51b8152600401610ba590614faf565b6001600160a01b039093166000908152600360209081526040808320938352929052209190915550565b611e6181604051602401611e3291906139eb565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526125a6565b50565b60008080805b8551811015611f94576000868281518110611e8757611e87614196565b602002602001015190506000611e9c82611550565b9050611ed46040518060400160405280601481526020017364656c65676174696f6e5369676e65723a20257360601b81525082611f9e565b81516000849003611f0857602081015115611f015760405162461bcd60e51b8152600401610ba590614ffe565b8196508195505b856001600160a01b0316826001600160a01b031614611f395760405162461bcd60e51b8152600401610ba590615050565b84816020015114611f5c5760405162461bcd60e51b8152600401610ba5906150aa565b6000611f67846116cd565b9050611f7882604001518a836125c7565b905195509350829150611f8c905081614207565b915050611e6a565b50505b9250929050565b611fe38282604051602401611fb49291906150ba565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526125a6565b5050565b611e6181604051602401611ffb9190612ec1565b60408051601f198184030181529190526020810180516001600160e01b03166327b7cf8560e01b1790526125a6565b6000828260405160200161203f929190615102565b60408051601f19818403018152828201909152600a82526943616c6c696e6720257360b01b602083015291506120759086611f9e565b61209f6040518060400160405280600881526020016746726f6d3a20257360c01b81525083611f9e565b6120ca6040518060400160405280600a815260200169313cba32903230ba309d60b11b815250611e1e565b6120d3816126c7565b600080866001600160a01b031686866040516120ef9190615124565b60006040518083038185875af1925050503d806000811461212c576040519150601f19603f3d011682016040523d82523d6000602084013e612131565b606091505b50915091506121636040518060400160405280600b81526020016a737563636573733a20257360a81b8152508361270a565b6121916040518060400160405280600d81526020016c313cba32b9903932b9bab63a1d60991b815250611e1e565b61219a816126c7565b60006121a58261274f565b90506121d36040518060400160405280600a815260200169726561736f6e3a20257360b01b8152508261279e565b8261023757815160208301fd5b60008060008084516041146121fb57600093505050506108f1565b50505060208201516040830151606084015160001a601b81101561222757612224601b82615130565b90505b8060ff16601b1415801561223f57508060ff16601c14155b1561225057600093505050506108f1565b600186828585604051600081526020016040526040516122739493929190615151565b6020604051602081039080840390855afa158015612295573d6000803e3d6000fd5b5050506020604051035193505050506108f1565b611fe382826040516024016122bf929190615186565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526125a6565b6000805b845181101561236157826001600160a01b031685828151811061231757612317614196565b60200260200101516001600160a01b03160361234f5783818151811061233f5761233f614196565b60200260200101519150506111c5565b8061235981614207565b9150506122f2565b506000949350505050565b60005b835181101561244f57816001600160a01b031684828151811061239457612394614196565b60200260200101516001600160a01b031614806123dc575060006001600160a01b03168482815181106123c9576123c9614196565b60200260200101516001600160a01b0316145b1561243d57818482815181106123f4576123f4614196565b60200260200101906001600160a01b031690816001600160a01b031681525050600183828151811061242857612428614196565b9115156020928302919091019091015261244f565b8061244781614207565b91505061236f565b50505050565b8015611e61576000336001600160a01b03168260001990604051612478906151a6565b600060405180830381858888f193505050503d80600081146114f5576040519150601f19603f3d011682016040523d82523d6000602084013e6114f5565b600030330361250c57600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b0316915061250f9050565b50335b90565b600061252186868686866127e3565b80519060200120905095945050505050565b6000612540826014614f57565b835110156125605760405162461bcd60e51b8152600401610ba5906151da565b500160200151600160601b900490565b600061257d826020614f57565b8351101561259d5760405162461bcd60e51b8152600401610ba590615216565b50016020015190565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60005b83518161ffff16101561244f576000848261ffff16815181106125ef576125ef614196565b60200260200101516000015190506000816001600160a01b0316635068de4c878561ffff168151811061262457612624614196565b60200260200101516020015187876040518463ffffffff1660e01b815260040161265093929190615265565b6020604051808303816000875af115801561266f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061269391906152ac565b9050806126b25760405162461bcd60e51b8152600401610ba5906152ff565b505080806126bf9061530f565b9150506125ca565b611e61816040516024016126db91906139eb565b60408051601f198184030181529190526020810180516001600160e01b03166305f3bfab60e11b1790526125a6565b611fe38282604051602401612720929190615327565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b1790526125a6565b80516060906044811015612773575050604080516020810190915260008152919050565b6004830180516003198301825290936127959083810160200190602401615347565b93525090919050565b611fe382826040516024016127b4929190615381565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b1790526125a6565b6060858560006127f38787612836565b604051909150853590602080880135916128179187918791879187918791016153a6565b6040516020818303038152906040529550505050505095945050505050565b6000604051828085833790209392505050565b82805482825590600052602060002090810192821561289c579160200282015b8281111561289c5781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190612869565b506128a89291506128ac565b5090565b5b808211156128a857600081556001016128ad565b6001600160a01b031690565b60006108f1826128c1565b6128e1816128cd565b8114611e6157600080fd5b80356108f1816128d8565b806128e1565b80356108f1816128f7565b60008083601f84011261291d5761291d600080fd5b5081356001600160401b0381111561293757612937600080fd5b602083019150836001820283011115611f9757611f97600080fd5b60008060008060008060008060c0898b03121561297157612971600080fd5b600061297d8b8b6128ec565b985050602061298e8b828c016128ec565b975050604061299f8b828c016128ec565b96505060606129b08b828c016128fd565b95505060808901356001600160401b038111156129cf576129cf600080fd5b6129db8b828c01612908565b945094505060a08901356001600160401b038111156129fc576129fc600080fd5b612a088b828c01612908565b92509250509295985092959890939650565b6001600160e01b03191690565b6128e181612a1a565b80356108f181612a27565b600060208284031215612a5057612a50600080fd5b6000611bc58484612a30565b8015155b82525050565b602081016108f18284612a5c565b600060208284031215612a8957612a89600080fd5b6000611bc584846128fd565b612a60816128cd565b602081016108f18284612a95565b601f01601f191690565b634e487b7160e01b600052604160045260246000fd5b612ad582612aac565b81018181106001600160401b0382111715612af257612af2612ab6565b6040525050565b6000612b0460405190565b9050612b108282612acc565b919050565b60006001600160401b03821115612b2e57612b2e612ab6565b5060209081020190565b60006001600160401b03821115612b5157612b51612ab6565b612b5a82612aac565b60200192915050565b82818337506000910152565b6000612b82612b7d84612b38565b612af9565b905082815260208101848484011115612b9d57612b9d600080fd5b612ba8848285612b63565b509392505050565b600082601f830112612bc457612bc4600080fd5b8135611bc5848260208601612b6f565b600060408284031215612be957612be9600080fd5b612bf36040612af9565b90506000612c0184846128ec565b82525060208201356001600160401b03811115612c2057612c20600080fd5b612c2c84828501612bb0565b60208301525092915050565b6000612c46612b7d84612b15565b83815290506020808201908402830185811115612c6557612c65600080fd5b835b81811015612ca55780356001600160401b03811115612c8857612c88600080fd5b808601612c958982612bd4565b8552505060209283019201612c67565b5050509392505050565b600082601f830112612cc357612cc3600080fd5b8135611bc5848260208601612c38565b600060808284031215612ce857612ce8600080fd5b612cf26080612af9565b90506000612d0084846128ec565b8252506020612d11848483016128fd565b60208301525060408201356001600160401b03811115612d3357612d33600080fd5b612d3f84828501612caf565b6040830152506060612d53848285016128fd565b60608301525092915050565b600060608284031215612d7457612d74600080fd5b612d7e6060612af9565b905081356001600160401b03811115612d9957612d99600080fd5b612da584828501612cd3565b82525060208201356001600160401b03811115612dc457612dc4600080fd5b612dd084828501612bb0565b6020830152506040612de4848285016128ec565b60408301525092915050565b6000612dfe612b7d84612b15565b83815290506020808201908402830185811115612e1d57612e1d600080fd5b835b81811015612ca55780356001600160401b03811115612e4057612e40600080fd5b808601612e4d8982612d5f565b8552505060209283019201612e1f565b600082601f830112612e7157612e71600080fd5b8135611bc5848260208601612df0565b600060208284031215612e9657612e96600080fd5b81356001600160401b03811115612eaf57612eaf600080fd5b611bc584828501612e5d565b80612a60565b602081016108f18284612ebb565b6000612edd612b7d84612b15565b83815290506020808201908402830185811115612efc57612efc600080fd5b835b81811015612ca55780612f1188826128ec565b84525060209283019201612efe565b600082601f830112612f3457612f34600080fd5b8135611bc5848260208601612ecf565b600060408284031215612f5957612f59600080fd5b612f636040612af9565b905081356001600160401b03811115612f7e57612f7e600080fd5b612f8a84828501612f20565b8252506020612c2c848483016128fd565b600060608284031215612fb057612fb0600080fd5b612fba6060612af9565b905081356001600160401b03811115612fd557612fd5600080fd5b612da584828501612f44565b600060208284031215612ff657612ff6600080fd5b81356001600160401b0381111561300f5761300f600080fd5b611bc584828501612f9b565b60006020828403121561303057613030600080fd5b81356001600160401b0381111561304957613049600080fd5b611bc584828501612f44565b60006040828403121561306a5761306a600080fd5b50919050565b60008060008060008060c0878903121561308c5761308c600080fd5b600061309889896128ec565b96505060206130a989828a016128fd565b95505060408701356001600160401b038111156130c8576130c8600080fd5b6130d489828a01612908565b945094505060608701356001600160401b038111156130f5576130f5600080fd5b61310189828a01613055565b925050608061311289828a01613055565b9150509295509295509295565b60006080828403121561313457613134600080fd5b61313e6080612af9565b9050600061314c84846128ec565b825250602061315d848483016128fd565b6020830152506040613171848285016128fd565b60408301525060608201356001600160401b0381111561319357613193600080fd5b612d5384828501612bb0565b6000604082840312156131b4576131b4600080fd5b6131be6040612af9565b905081356001600160401b038111156131d9576131d9600080fd5b6131e58482850161311f565b82525060208201356001600160401b0381111561320457613204600080fd5b612c2c84828501612e5d565b600061321e612b7d84612b15565b8381529050602080820190840283018581111561323d5761323d600080fd5b835b81811015612ca55780356001600160401b0381111561326057613260600080fd5b80860161326d898261319f565b855250506020928301920161323f565b600082601f83011261329157613291600080fd5b8135611bc5848260208601613210565b6000604082840312156132b6576132b6600080fd5b6132c06040612af9565b90506000612f8a84846128fd565b6000606082840312156132e3576132e3600080fd5b6132ed6040612af9565b905081356001600160401b0381111561330857613308600080fd5b6133148482850161327d565b8252506020612c2c848483016132a1565b60006060828403121561333a5761333a600080fd5b6133446060612af9565b905081356001600160401b0381111561335f5761335f600080fd5b612da5848285016132ce565b60006020828403121561338057613380600080fd5b81356001600160401b0381111561339957613399600080fd5b611bc584828501613325565b6000806000806000608086880312156133c0576133c0600080fd5b60006133cc88886128ec565b95505060206133dd888289016128ec565b94505060406133ee888289016128fd565b93505060608601356001600160401b0381111561340d5761340d600080fd5b61341988828901612908565b92509250509295509295909350565b612a6081612a1a565b602081016108f18284613428565b60008060006040848603121561345757613457600080fd5b600061346386866128fd565b93505060208401356001600160401b0381111561348257613482600080fd5b61348e86828701612908565b92509250509250925092565b6000602082840312156134af576134af600080fd5b81356001600160401b038111156134c8576134c8600080fd5b611bc58482850161319f565b6000602082840312156134e9576134e9600080fd5b6000611bc584846128ec565b6000610160828403121561306a5761306a600080fd5b60008060006060848603121561352357613523600080fd5b83356001600160401b0381111561353c5761353c600080fd5b613548868287016134f5565b9350506020613559868287016128fd565b925050604061356a868287016128fd565b9150509250925092565b6000806020838503121561358a5761358a600080fd5b82356001600160401b038111156135a3576135a3600080fd5b6135af85828601612908565b92509250509250929050565b60005b838110156135d65781810151838201526020016135be565b8381111561244f5750506000910152565b60006135f1825190565b8084526020840193506136088185602086016135bb565b61361181612aac565b9093019392505050565b805160408084526000919084019061363382826135e7565b9150506020830151612ba86020860182612a95565b60006111c5838361361b565b600061365e825190565b808452602084019350836020820285016136788560200190565b8060005b858110156136ad57848403895281516136958582613648565b94506020830160209a909a019992505060010161367c565b5091979650505050505050565b602080825281016111c58184613654565b6000608082840312156136e0576136e0600080fd5b6136ea6080612af9565b905081356001600160401b0381111561370557613705600080fd5b61371184828501612bb0565b82525060208201356001600160401b0381111561373057613730600080fd5b61373c84828501612bb0565b6020830152506040613750848285016128fd565b6040830152506060612d53848285016128ec565b60006020828403121561377957613779600080fd5b81356001600160401b0381111561379257613792600080fd5b611bc5848285016136cb565b60ff8116612a60565b602081016108f1828461379e565b6000602082840312156137ca576137ca600080fd5b81356001600160401b038111156137e3576137e3600080fd5b611bc584828501613055565b60006020828403121561380457613804600080fd5b81356001600160401b0381111561381d5761381d600080fd5b611bc584828501612cd3565b60006020828403121561383e5761383e600080fd5b81356001600160401b0381111561385757613857600080fd5b611bc584828501612d5f565b600080600080600060a0868803121561387e5761387e600080fd5b600061388a88886128ec565b955050602061389b888289016128fd565b94505060408601356001600160401b038111156138ba576138ba600080fd5b6138c688828901612908565b935093505060606138d988828901613055565b9150509295509295909350565b608081016138f48287613428565b6139016020830186612a95565b61390e6040830185612ebb565b818103606083015261159381846135e7565b600061392e612b7d84612b15565b8381529050602080820190840283018581111561394d5761394d600080fd5b835b81811015612ca55780356001600160401b0381111561397057613970600080fd5b80860161397d8982612cd3565b855250506020928301920161394f565b600082601f8301126139a1576139a1600080fd5b8135611bc5848260208601613920565b6000602082840312156139c6576139c6600080fd5b81356001600160401b038111156139df576139df600080fd5b611bc58482850161398d565b602080825281016111c581846135e7565b600060208284031215613a1157613a11600080fd5b81356001600160401b03811115613a2a57613a2a600080fd5b611bc584828501612bb0565b80516000906040840190613a4a8582612a95565b5060208301518482036020860152610dac82826135e7565b60006111c58383613a36565b6000613a78825190565b80845260208401935083602082028501613a928560200190565b8060005b858110156136ad5784840389528151613aaf8582613a62565b94506020830160209a909a0199925050600101613a96565b80516000906080840190613adb8582612a95565b506020830151613aee6020860182612ebb565b5060408301518482036040860152613b068282613a6e565b9150506060830151612ba86060860182612ebb565b8051606080845260009190840190613b338282613ac7565b91505060208301518482036020860152613b4d82826135e7565b9150506040830151612ba86040860182612a95565b60006111c58383613b1b565b6000613b78825190565b80845260208401935083602082028501613b928560200190565b8060005b858110156136ad5784840389528151613baf8582613b62565b94506020830160209a909a0199925050600101613b96565b602080825281016111c58184613b6e565b600060408284031215613bed57613bed600080fd5b6000611bc584846132a1565b6000613c058383612a95565b505060200190565b6000613c17825190565b80845260209384019383018060005b83811015613c4b578151613c3a8882613bf9565b975060208301925050600101613c26565b509495945050505050565b602080825281016111c58184613c0d565b600060208284031215613c7c57613c7c600080fd5b81356001600160401b03811115613c9557613c95600080fd5b611bc584828501612f20565b60006108f1613cb261250f846128c1565b6128c1565b60006108f182613ca1565b60006108f182613cb7565b612a6081613cc2565b602081016108f18284613ccd565b60008060408385031215613cfa57613cfa600080fd5b6000613d0685856128ec565b9250506020613d17858286016128fd565b9150509250929050565b600060208284031215613d3657613d36600080fd5b81356001600160401b03811115613d4f57613d4f600080fd5b611bc58482850161311f565b60008083601f840112613d7057613d70600080fd5b5081356001600160401b03811115613d8a57613d8a600080fd5b602083019150836020820283011115611f9757611f97600080fd5b60008060008060008060008060a0898b031215613dc457613dc4600080fd5b6000613dd08b8b6128ec565b9850506020613de18b828c016128ec565b97505060408901356001600160401b03811115613e0057613e00600080fd5b613e0c8b828c01613d5b565b965096505060608901356001600160401b03811115613e2d57613e2d600080fd5b613e398b828c01613d5b565b945094505060808901356001600160401b038111156129fc576129fc600080fd5b600060208284031215613e6f57613e6f600080fd5b81356001600160401b03811115613e8857613e88600080fd5b611bc5848285016132ce565b60008060408385031215613eaa57613eaa600080fd5b6000613eb685856128ec565b9250506020613d17858286016128ec565b60008060008060808587031215613ee057613ee0600080fd5b84356001600160401b03811115613ef957613ef9600080fd5b613f0587828801612bb0565b94505060208501356001600160401b03811115613f2457613f24600080fd5b613f3087828801612bb0565b9350506040613f41878288016128fd565b9250506060613f52878288016128ec565b91505092959194509250565b600060208284031215613f7357613f73600080fd5b81356001600160401b03811115613f8c57613f8c600080fd5b611bc584828501612bd4565b600060208284031215613fad57613fad600080fd5b81356001600160401b03811115613fc657613fc6600080fd5b611bc58482850161327d565b60008060008060008060a08789031215613fee57613fee600080fd5b6000613ffa89896128ec565b965050602061400b89828a016128ec565b955050604061401c89828a016128fd565b945050606061402d89828a016128fd565b93505060808701356001600160401b0381111561404c5761404c600080fd5b61405889828a01612908565b92509250509295509295509295565b60006020828403121561407c5761407c600080fd5b81356001600160401b0381111561409557614095600080fd5b611bc584828501612caf565b60006140ab825190565b808452602084019350836020820285016140c58560200190565b8060005b858110156136ad57848403895281516140e28582613b62565b94506020830160209a909a01999250506001016140c9565b6000614104825190565b8084526020840193508360208202850161411e8560200190565b8060005b858110156136ad578484038952815161413b8582613648565b94506020830160209a909a0199925050600101614122565b805160408084526000919084019061416b82826140a1565b91505060208301518482036020860152610dac82826140fa565b602080825281016111c58184614153565b634e487b7160e01b600052603260045260246000fd5b60006141b6825190565b6141c48185602086016135bb565b9290920192915050565b60006141da82856141ac565b91506141e7828480612a60565b5060200192915050565b634e487b7160e01b600052601160045260246000fd5b6000600019820361421a5761421a6141f1565b5060010190565b6080810161422f8287612ebb565b61423c6020830186612ebb565b6142496040830185612ebb565b610dac6060830184612a95565b606081016142648286612ebb565b6142716020830185612ebb565b611bc56040830184612ebb565b6000808335601e193685900301811261429957614299600080fd5b8084019250823591506001600160401b038211156142b9576142b9600080fd5b602092830192820236038313156142d2576142d2600080fd5b509250929050565b60006111c5368484612df0565b602681526000602082017f44656c6567617461626c65343333373a696e76616c69642d726f6f742d617574815265686f7269747960d01b602082015291505b5060400190565b602080825281016108f1816142e7565b6000808335601e193685900301811261435857614358600080fd5b8381016020810193503591506001600160401b0382111561437b5761437b600080fd5b368290038313156142d2576142d2600080fd5b81835260006020840193506143a4838584612b63565b61361183612aac565b60006111c560208401846128ec565b6000604083016143cc838061433d565b85830386526143dc83828461438e565b925050506143ed60208401846143ad565b612ba86020860182612a95565b60006111c583836143bc565b60008235603e193684900301811261442057614420600080fd5b90910192915050565b818352600060208401935083602084028101838060005b878110156136ad5784840389526144578284614406565b61446185826143fa565b94506020830160209a909a0199925050600101614440565b60208082528101611bc5818486614429565b604081016144998285612ebb565b8181036020830152611bc581846135e7565b80516108f181612a27565b6000602082840312156144cb576144cb600080fd5b6000611bc584846144ab565b602181526000602082017f44656c6567617461626c65343333373a696e76616c69642d7369676e617475728152606560f81b60208201529150614326565b602080825281016108f1816144d7565b61190160f01b8152600201600061453d828580612a60565b6020820191506141e7828480612a60565b6011815260006020820170494e56414c49445f5349474e415455524560781b815291505b5060200190565b602080825281016108f18161454e565b60ff16600060fe19820161421a5761421a6141f1565b6000604082840312156145b4576145b4600080fd5b6145be6040612af9565b905081356001600160401b038111156145d9576145d9600080fd5b6145e584828501612bb0565b8252506020612c2c848483016128ec565b6000614604612b7d84612b15565b8381529050602080820190840283018581111561462357614623600080fd5b835b81811015612ca55780356001600160401b0381111561464657614646600080fd5b808601614653898261459f565b8552505060209283019201614625565b600082601f83011261467757614677600080fd5b8135611bc58482602086016145f6565b60006020828403121561469c5761469c600080fd5b81356001600160401b038111156146b5576146b5600080fd5b611bc584828501614663565b60a081016146cf8288612ebb565b6146dc6020830187612ebb565b6146e96040830186612ebb565b6146f66060830185612ebb565b6115936080830184612a95565b602c81526000602082017f53696d706c654d756c74697369673a205369676e6572206973206e6f7420746881526b34b99031b7b73a3930b1ba1760a11b60208201529150614326565b602080825281016108f181614703565b602b81526000602082017f53696d706c654d756c74697369673a204174206c65617374206f6e65206f776e81526a195c881c995c5d5a5c995960aa1b60208201529150614326565b602080825281016108f18161475c565b602181526000602082017f53696d706c654d756c74697369673a20496e76616c6964207468726573686f6c8152601960fa1b60208201529150614326565b602080825281016108f1816147b4565b60a081016148108288612ebb565b61481d6020830187612a95565b61482a6040830186612ebb565b6148376060830185612ebb565b6115936080830184612ebb565b6000808585111561485757614857600080fd5b8386111561486757614867600080fd5b5050820193919092039150565b600082826148828135612a1a565b925060048210156148a9576148a46001600160e01b0319836004036008021b90565b831692505b505092915050565b60006111c58383613ac7565b60006148c7825190565b808452602084019350836020820285016148e18560200190565b8060005b858110156136ad57848403895281516148fe85826148b1565b94506020830160209a909a01999250506001016148e5565b602080825281016111c581846148bd565b80516108f1816128d8565b80516108f1816128f7565b600061494b612b7d84612b38565b90508281526020810184848401111561496657614966600080fd5b612ba88482856135bb565b600082601f83011261498557614985600080fd5b8151611bc584826020860161493d565b6000604082840312156149aa576149aa600080fd5b6149b46040612af9565b905060006149c28484614927565b82525060208201516001600160401b038111156149e1576149e1600080fd5b612c2c84828501614971565b60006149fb612b7d84612b15565b83815290506020808201908402830185811115614a1a57614a1a600080fd5b835b81811015612ca55780516001600160401b03811115614a3d57614a3d600080fd5b808601614a4a8982614995565b8552505060209283019201614a1c565b600082601f830112614a6e57614a6e600080fd5b8151611bc58482602086016149ed565b600060808284031215614a9357614a93600080fd5b614a9d6080612af9565b90506000614aab8484614927565b8252506020614abc84848301614932565b60208301525060408201516001600160401b03811115614ade57614ade600080fd5b614aea84828501614a5a565b6040830152506060612d5384828501614932565b600060608284031215614b1357614b13600080fd5b614b1d6060612af9565b82519091506001600160401b03811115614b3957614b39600080fd5b614b4584828501614a7e565b82525060208201516001600160401b03811115614b6457614b64600080fd5b614b7084828501614971565b6020830152506040612de484828501614927565b6000614b92612b7d84612b15565b83815290506020808201908402830185811115614bb157614bb1600080fd5b835b81811015612ca55780516001600160401b03811115614bd457614bd4600080fd5b808601614be18982614afe565b8552505060209283019201614bb3565b600082601f830112614c0557614c05600080fd5b8151611bc5848260208601614b84565b600060208284031215614c2a57614c2a600080fd5b81516001600160401b03811115614c4357614c43600080fd5b611bc584828501614bf1565b6000614c59825190565b602083018060005b83811015613c4b578151614c758882613bf9565b975060208301925050600101614c61565b60006111c58284614c4f565b600060208284031215614ca757614ca7600080fd5b6000611bc58484614932565b602a81526000602082017f53696d706c654d756c74697369673a204f6c64207369676e6572206973206e6f8152693a1030b71037bbb732b960b11b60208201529150614326565b602080825281016108f181614cb3565b602e81526000602082017f53696d706c654d756c74697369673a204e6577207369676e657220697320616c81526d3932b0b23c9030b71037bbb732b960911b60208201529150614326565b602080825281016108f181614d0a565b603981526000602082017f53696d706c654d756c74697369673a204f6c6420616e64206e6577207369676e81527865722061646472657373657320617265207468652073616d6560381b60208201529150614326565b602080825281016108f181614d65565b602181526000602082017f4f6e6c79207369676e65722063616e20757064617465207468656d73656c76658152607360f81b60208201529150614326565b602080825281016108f181614dcb565b6001600160c01b031690565b612a608160006108f182614e19565b60408101614e428285612a95565b6111c56020830184614e25565b60608101614e5d8286612ebb565b6142716020830185612a95565b600060408284031215614e7f57614e7f600080fd5b614e896040612af9565b905081356001600160401b03811115614ea457614ea4600080fd5b614eb084828501612e5d565b82525060208201356001600160401b03811115614ecf57614ecf600080fd5b612c2c84828501614663565b600060208284031215614ef057614ef0600080fd5b81356001600160401b03811115614f0957614f09600080fd5b611bc584828501614e6a565b60208082527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e7491019081526000614572565b602080825281016108f181614f15565b60008219821115614f6a57614f6a6141f1565b500190565b602381526000602082017f44656c6567617461626c65343333373a6e6f6e6365322d6f75742d6f662d6f728152623232b960e91b60208201529150614326565b602080825281016108f181614f6f565b602281526000602082017f43616e44656c65676174653a696e76616c69642d726f6f742d617574686f7269815261747960f01b60208201529150614326565b602080825281016108f181614fbf565b602581526000602082017f43616e44656c65676174653a696e76616c69642d64656c65676174696f6e2d7381526434b3b732b960d91b60208201529150614326565b602080825281016108f18161500e565b602d81526000602082017f43616e44656c65676174653a696e76616c69642d617574686f726974792d646581526c6c65676174696f6e2d6c696e6b60981b60208201529150614326565b602080825281016108f181615060565b604080825281016150cb81856135e7565b90506111c56020830184612a95565b60006108f18260601b90565b60006108f1826150da565b612a606150fd826128cd565b6150e6565b600061510e82856141ac565b915061511a82846150f1565b5060140192915050565b60006111c582846141ac565b600060ff8216915060ff831692508260ff03821115614f6a57614f6a6141f1565b6080810161515f8287612ebb565b61516c602083018661379e565b6151796040830185612ebb565b610dac6060830184612ebb565b6040808252810161519781856135e7565b90506111c56020830184612ebb565b6000816108f1565b6015815260006020820174746f416464726573735f6f75744f66426f756e647360581b81529150614572565b602080825281016108f1816151ae565b6015815260006020820174746f55696e743235365f6f75744f66426f756e647360581b81529150614572565b602080825281016108f1816151ea565b8051600090606084019061523a8582612a95565b50602083015161524d6020860182612ebb565b5060408301518482036040860152610dac82826135e7565b6060808252810161527681866135e7565b9050818103602083015261528a8185615226565b9050611bc56040830184612ebb565b8015156128e1565b80516108f181615299565b6000602082840312156152c1576152c1600080fd5b6000611bc584846152a1565b601b81526000602082017a10d85b91195b1959d85d194e98d85d99585d0b5c995a9958dd1959602a1b81529150614572565b602080825281016108f1816152cd565b61ffff16600061fffe19820161421a5761421a6141f1565b6040808252810161533881856135e7565b90506111c56020830184612a5c565b60006020828403121561535c5761535c600080fd5b81516001600160401b0381111561537557615375600080fd5b611bc584828501614971565b6040808252810161539281856135e7565b90508181036020830152611bc581846135e7565b60a081016153b48288612a95565b61481d6020830187612ebb56fe436f6e636c756465642025732063616e206772616e742e20313237312076616c69646174696e672e8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f456e74657265642044656c656761746561626c65343333374163636f756e742e65786563757465a26469706673582212206d57f1f07913161a843c1a0f834ebf1b3caa616e1034dc7c31c1cfb23bf0723164736f6c634300080f0033'

type Delegatable4337AccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: Delegatable4337AccountConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class Delegatable4337Account__factory extends ContractFactory {
  constructor(...args: Delegatable4337AccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
    this.contractName = 'Delegatable4337Account'
  }

  deploy(
    anEntryPoint: string,
    _owners: string[],
    _threshold: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<Delegatable4337Account> {
    return super.deploy(
      anEntryPoint,
      _owners,
      _threshold,
      overrides || {},
    ) as Promise<Delegatable4337Account>
  }
  getDeployTransaction(
    anEntryPoint: string,
    _owners: string[],
    _threshold: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      anEntryPoint,
      _owners,
      _threshold,
      overrides || {},
    )
  }
  attach(address: string): Delegatable4337Account {
    return super.attach(address) as Delegatable4337Account
  }
  connect(signer: Signer): Delegatable4337Account__factory {
    return super.connect(signer) as Delegatable4337Account__factory
  }
  static readonly contractName: 'Delegatable4337Account'
  public readonly contractName: 'Delegatable4337Account'
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): Delegatable4337AccountInterface {
    return new utils.Interface(_abi) as Delegatable4337AccountInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): Delegatable4337Account {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as Delegatable4337Account
  }
}
