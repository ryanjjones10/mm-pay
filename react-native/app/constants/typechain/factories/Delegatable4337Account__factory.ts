/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import '@ethersproject/shims'
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type {
  Delegatable4337Account,
  Delegatable4337AccountInterface,
} from '../Delegatable4337Account'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IEntryPoint',
        name: 'anEntryPoint',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: '_owners',
        type: 'address[]',
      },
      {
        internalType: 'uint8',
        name: '_threshold',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'addDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'signatureField',
        type: 'bytes',
      },
    ],
    name: 'decodeAgnosticSignatures',
    outputs: [
      {
        components: [
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'contractAddress',
            type: 'address',
          },
        ],
        internalType: 'struct ContractAgnosticSignature[]',
        name: 'payload',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'callData',
        type: 'bytes',
      },
    ],
    name: 'decodeCallData',
    outputs: [
      {
        internalType: 'bytes4',
        name: 'funcSig',
        type: 'bytes4',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'encodedDelegationArray',
        type: 'bytes',
      },
    ],
    name: 'decodeDelegationArray',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'delegate',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'authority',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'enforcer',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes',
                    name: 'terms',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Caveat[]',
                name: 'caveats',
                type: 'tuple[]',
              },
              {
                internalType: 'uint256',
                name: 'salt',
                type: 'uint256',
              },
            ],
            internalType: 'struct Delegation',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedDelegation[]',
        name: 'delegationArray',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'signatureField',
        type: 'bytes',
      },
    ],
    name: 'decodeSignature',
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'delegate',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'authority',
                    type: 'bytes32',
                  },
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'enforcer',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes',
                        name: 'terms',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Caveat[]',
                    name: 'caveats',
                    type: 'tuple[]',
                  },
                  {
                    internalType: 'uint256',
                    name: 'salt',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Delegation',
                name: 'message',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'signer',
                type: 'address',
              },
            ],
            internalType: 'struct SignedDelegation[]',
            name: 'delegations',
            type: 'tuple[]',
          },
          {
            components: [
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'contractAddress',
                type: 'address',
              },
            ],
            internalType: 'struct ContractAgnosticSignature[]',
            name: 'signatures',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct SignaturePayload',
        name: 'payload',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'domainHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'delegate',
            type: 'address',
          },
          {
            internalType: 'bytes32',
            name: 'authority',
            type: 'bytes32',
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'enforcer',
                type: 'address',
              },
              {
                internalType: 'bytes',
                name: 'terms',
                type: 'bytes',
              },
            ],
            internalType: 'struct Caveat[]',
            name: 'caveats',
            type: 'tuple[]',
          },
          {
            internalType: 'uint256',
            name: 'salt',
            type: 'uint256',
          },
        ],
        internalType: 'struct Delegation[]',
        name: 'delegationArray',
        type: 'tuple[]',
      },
    ],
    name: 'encodeDelegationArray',
    outputs: [
      {
        internalType: 'bytes',
        name: 'encodedDelegationArray',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'entryPoint',
    outputs: [
      {
        internalType: 'contract IEntryPoint',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_dest',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_func',
        type: 'bytes',
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'delegate',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'authority',
                    type: 'bytes32',
                  },
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'enforcer',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes',
                        name: 'terms',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Caveat[]',
                    name: 'caveats',
                    type: 'tuple[]',
                  },
                  {
                    internalType: 'uint256',
                    name: 'salt',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Delegation',
                name: 'message',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'signer',
                type: 'address',
              },
            ],
            internalType: 'struct SignedDelegation[]',
            name: 'delegations',
            type: 'tuple[]',
          },
          {
            components: [
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'contractAddress',
                type: 'address',
              },
            ],
            internalType: 'struct ContractAgnosticSignature[]',
            name: 'signatures',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct SignaturePayload',
        name: '_signaturePayload',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'queue',
            type: 'uint256',
          },
        ],
        internalType: 'struct ReplayProtection',
        name: '_protection',
        type: 'tuple',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_input',
        type: 'address[]',
      },
    ],
    name: 'getAddressArrayPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'to',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'gasLimit',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'value',
                    type: 'uint256',
                  },
                  {
                    internalType: 'bytes',
                    name: 'data',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Transaction',
                name: 'transaction',
                type: 'tuple',
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'delegate',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes32',
                        name: 'authority',
                        type: 'bytes32',
                      },
                      {
                        components: [
                          {
                            internalType: 'address',
                            name: 'enforcer',
                            type: 'address',
                          },
                          {
                            internalType: 'bytes',
                            name: 'terms',
                            type: 'bytes',
                          },
                        ],
                        internalType: 'struct Caveat[]',
                        name: 'caveats',
                        type: 'tuple[]',
                      },
                      {
                        internalType: 'uint256',
                        name: 'salt',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct Delegation',
                    name: 'message',
                    type: 'tuple',
                  },
                  {
                    internalType: 'bytes',
                    name: 'signature',
                    type: 'bytes',
                  },
                  {
                    internalType: 'address',
                    name: 'signer',
                    type: 'address',
                  },
                ],
                internalType: 'struct SignedDelegation[]',
                name: 'authority',
                type: 'tuple[]',
              },
            ],
            internalType: 'struct Invocation[]',
            name: 'invocations',
            type: 'tuple[]',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'nonce',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'queue',
                type: 'uint256',
              },
            ],
            internalType: 'struct ReplayProtection',
            name: 'replayProtection',
            type: 'tuple',
          },
        ],
        internalType: 'struct Batch',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getBatchPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'enforcer',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'terms',
            type: 'bytes',
          },
        ],
        internalType: 'struct Caveat[]',
        name: '_input',
        type: 'tuple[]',
      },
    ],
    name: 'getCaveatArrayPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'enforcer',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'terms',
            type: 'bytes',
          },
        ],
        internalType: 'struct Caveat',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getCaveatPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'delegate',
            type: 'address',
          },
          {
            internalType: 'bytes32',
            name: 'authority',
            type: 'bytes32',
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'enforcer',
                type: 'address',
              },
              {
                internalType: 'bytes',
                name: 'terms',
                type: 'bytes',
              },
            ],
            internalType: 'struct Caveat[]',
            name: 'caveats',
            type: 'tuple[]',
          },
          {
            internalType: 'uint256',
            name: 'salt',
            type: 'uint256',
          },
        ],
        internalType: 'struct Delegation',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getDelegationPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getDomainHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'contractName',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'version',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'verifyingContract',
        type: 'address',
      },
    ],
    name: 'getEIP712DomainHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'name',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'version',
            type: 'string',
          },
          {
            internalType: 'uint256',
            name: 'chainId',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'verifyingContract',
            type: 'address',
          },
        ],
        internalType: 'struct EIP712Domain',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getEip712DomainPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'to',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'gasLimit',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct Transaction',
            name: 'transaction',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'delegate',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'authority',
                    type: 'bytes32',
                  },
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'enforcer',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes',
                        name: 'terms',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Caveat[]',
                    name: 'caveats',
                    type: 'tuple[]',
                  },
                  {
                    internalType: 'uint256',
                    name: 'salt',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Delegation',
                name: 'message',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'signer',
                type: 'address',
              },
            ],
            internalType: 'struct SignedDelegation[]',
            name: 'authority',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Invocation[]',
        name: '_input',
        type: 'tuple[]',
      },
    ],
    name: 'getInvocationArrayPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'to',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'gasLimit',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct Transaction',
            name: 'transaction',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'delegate',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes32',
                    name: 'authority',
                    type: 'bytes32',
                  },
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'enforcer',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes',
                        name: 'terms',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Caveat[]',
                    name: 'caveats',
                    type: 'tuple[]',
                  },
                  {
                    internalType: 'uint256',
                    name: 'salt',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct Delegation',
                name: 'message',
                type: 'tuple',
              },
              {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
              },
              {
                internalType: 'address',
                name: 'signer',
                type: 'address',
              },
            ],
            internalType: 'struct SignedDelegation[]',
            name: 'authority',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct Invocation',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getInvocationPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'intendedSender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'queue',
        type: 'uint256',
      },
    ],
    name: 'getMultiNonce',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'signers',
            type: 'address[]',
          },
          {
            internalType: 'uint256',
            name: 'threshold',
            type: 'uint256',
          },
        ],
        internalType: 'struct MultisigParams',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getMultisigparamsPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getNonce',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getOwners',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'queue',
            type: 'uint256',
          },
        ],
        internalType: 'struct ReplayProtection',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getReplayprotectionPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'to',
                        type: 'address',
                      },
                      {
                        internalType: 'uint256',
                        name: 'gasLimit',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'value',
                        type: 'uint256',
                      },
                      {
                        internalType: 'bytes',
                        name: 'data',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Transaction',
                    name: 'transaction',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: 'address',
                            name: 'delegate',
                            type: 'address',
                          },
                          {
                            internalType: 'bytes32',
                            name: 'authority',
                            type: 'bytes32',
                          },
                          {
                            components: [
                              {
                                internalType: 'address',
                                name: 'enforcer',
                                type: 'address',
                              },
                              {
                                internalType: 'bytes',
                                name: 'terms',
                                type: 'bytes',
                              },
                            ],
                            internalType: 'struct Caveat[]',
                            name: 'caveats',
                            type: 'tuple[]',
                          },
                          {
                            internalType: 'uint256',
                            name: 'salt',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct Delegation',
                        name: 'message',
                        type: 'tuple',
                      },
                      {
                        internalType: 'bytes',
                        name: 'signature',
                        type: 'bytes',
                      },
                      {
                        internalType: 'address',
                        name: 'signer',
                        type: 'address',
                      },
                    ],
                    internalType: 'struct SignedDelegation[]',
                    name: 'authority',
                    type: 'tuple[]',
                  },
                ],
                internalType: 'struct Invocation[]',
                name: 'invocations',
                type: 'tuple[]',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'nonce',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'queue',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ReplayProtection',
                name: 'replayProtection',
                type: 'tuple',
              },
            ],
            internalType: 'struct Batch',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedBatch',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getSignedbatchPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'delegate',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'authority',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'enforcer',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes',
                    name: 'terms',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Caveat[]',
                name: 'caveats',
                type: 'tuple[]',
              },
              {
                internalType: 'uint256',
                name: 'salt',
                type: 'uint256',
              },
            ],
            internalType: 'struct Delegation',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedDelegation[]',
        name: '_input',
        type: 'tuple[]',
      },
    ],
    name: 'getSigneddelegationArrayPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'delegate',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'authority',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'enforcer',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes',
                    name: 'terms',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Caveat[]',
                name: 'caveats',
                type: 'tuple[]',
              },
              {
                internalType: 'uint256',
                name: 'salt',
                type: 'uint256',
              },
            ],
            internalType: 'struct Delegation',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedDelegation',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getSigneddelegationPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address[]',
                name: 'signers',
                type: 'address[]',
              },
              {
                internalType: 'uint256',
                name: 'threshold',
                type: 'uint256',
              },
            ],
            internalType: 'struct MultisigParams',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedMultisigParams',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getSignedmultisigparamsPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'gasLimit',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct Transaction',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'getTransactionPacketHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'isOwner',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_hash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_signatures',
        type: 'bytes',
      },
    ],
    name: 'isValidSignature',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'onERC1155BatchReceived',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'onERC1155Received',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'onERC721Received',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'owners',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'threshold',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'tokensReceived',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_oldSigner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_newSigner',
        type: 'address',
      },
    ],
    name: 'updateSignerAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'signers',
            type: 'address[]',
          },
          {
            internalType: 'uint256',
            name: 'threshold',
            type: 'uint256',
          },
        ],
        internalType: 'struct MultisigParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'updateSigners',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'sender',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'initCode',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'callData',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'callGasLimit',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'verificationGasLimit',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'preVerificationGas',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxFeePerGas',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxPriorityFeePerGas',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'paymasterAndData',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
        ],
        internalType: 'struct UserOperation',
        name: 'userOp',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'userOpHash',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'missingAccountFunds',
        type: 'uint256',
      },
    ],
    name: 'validateUserOp',
    outputs: [
      {
        internalType: 'uint256',
        name: 'validationData',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'address',
                        name: 'to',
                        type: 'address',
                      },
                      {
                        internalType: 'uint256',
                        name: 'gasLimit',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint256',
                        name: 'value',
                        type: 'uint256',
                      },
                      {
                        internalType: 'bytes',
                        name: 'data',
                        type: 'bytes',
                      },
                    ],
                    internalType: 'struct Transaction',
                    name: 'transaction',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: 'address',
                            name: 'delegate',
                            type: 'address',
                          },
                          {
                            internalType: 'bytes32',
                            name: 'authority',
                            type: 'bytes32',
                          },
                          {
                            components: [
                              {
                                internalType: 'address',
                                name: 'enforcer',
                                type: 'address',
                              },
                              {
                                internalType: 'bytes',
                                name: 'terms',
                                type: 'bytes',
                              },
                            ],
                            internalType: 'struct Caveat[]',
                            name: 'caveats',
                            type: 'tuple[]',
                          },
                          {
                            internalType: 'uint256',
                            name: 'salt',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct Delegation',
                        name: 'message',
                        type: 'tuple',
                      },
                      {
                        internalType: 'bytes',
                        name: 'signature',
                        type: 'bytes',
                      },
                      {
                        internalType: 'address',
                        name: 'signer',
                        type: 'address',
                      },
                    ],
                    internalType: 'struct SignedDelegation[]',
                    name: 'authority',
                    type: 'tuple[]',
                  },
                ],
                internalType: 'struct Invocation[]',
                name: 'invocations',
                type: 'tuple[]',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'nonce',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'queue',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ReplayProtection',
                name: 'replayProtection',
                type: 'tuple',
              },
            ],
            internalType: 'struct Batch',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedBatch',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'verifySignedBatch',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'delegate',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'authority',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'address',
                    name: 'enforcer',
                    type: 'address',
                  },
                  {
                    internalType: 'bytes',
                    name: 'terms',
                    type: 'bytes',
                  },
                ],
                internalType: 'struct Caveat[]',
                name: 'caveats',
                type: 'tuple[]',
              },
              {
                internalType: 'uint256',
                name: 'salt',
                type: 'uint256',
              },
            ],
            internalType: 'struct Delegation',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedDelegation',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'verifySignedDelegation',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address[]',
                name: 'signers',
                type: 'address[]',
              },
              {
                internalType: 'uint256',
                name: 'threshold',
                type: 'uint256',
              },
            ],
            internalType: 'struct MultisigParams',
            name: 'message',
            type: 'tuple',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'signer',
            type: 'address',
          },
        ],
        internalType: 'struct SignedMultisigParams',
        name: '_input',
        type: 'tuple',
      },
    ],
    name: 'verifySignedMultisigParams',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
]

const _bytecode =
  ''

type Delegatable4337AccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: Delegatable4337AccountConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class Delegatable4337Account__factory extends ContractFactory {
  constructor(...args: Delegatable4337AccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
    this.contractName = 'Delegatable4337Account'
  }

  deploy(
    anEntryPoint: string,
    _owners: string[],
    _threshold: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<Delegatable4337Account> {
    return super.deploy(
      anEntryPoint,
      _owners,
      _threshold,
      overrides || {},
    ) as Promise<Delegatable4337Account>
  }
  getDeployTransaction(
    anEntryPoint: string,
    _owners: string[],
    _threshold: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      anEntryPoint,
      _owners,
      _threshold,
      overrides || {},
    )
  }
  attach(address: string): Delegatable4337Account {
    return super.attach(address) as Delegatable4337Account
  }
  connect(signer: Signer): Delegatable4337Account__factory {
    return super.connect(signer) as Delegatable4337Account__factory
  }
  static readonly contractName: 'Delegatable4337Account'
  public readonly contractName: 'Delegatable4337Account'
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): Delegatable4337AccountInterface {
    return new utils.Interface(_abi) as Delegatable4337AccountInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): Delegatable4337Account {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as Delegatable4337Account
  }
}
